{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport { useTheme } from 'next-themes'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\n\ninterface HeaderProps {\n  language: string\n  setLanguage: (lang: string) => void\n}\n\n// Arayüz tamamen Almanca - dil seçimi sadece kelime anlamları için\nconst translations = {\n  title: 'LinguaMaster Pro',\n  subtitle: 'Deutsche Lernplattform',\n  translationLanguage: 'Übersetzungssprache',\n  theme: 'Design',\n  light: 'Hell',\n  dark: 'Dunkel',\n  turkish: 'Türkisch',\n  english: 'Englisch'\n}\n\nexport default function Header({ language, setLanguage }: HeaderProps) {\n  const { theme, setTheme } = useTheme()\n  const t = translations\n\n  return (\n    <header className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg\">\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-12 h-12 bg-white rounded-lg flex items-center justify-center\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-blue-600 to-purple-600 rounded-md flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">LM</span>\n              </div>\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold\">{t.title}</h1>\n              <p className=\"text-blue-100 text-sm\">{t.subtitle}</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Translation Language Selector */}\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"text-white hover:bg-white/20\">\n                  🌐 {t.translationLanguage}\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent>\n                <DropdownMenuItem onClick={() => setLanguage('tr')}>\n                  🇹🇷 {t.turkish}\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => setLanguage('en')}>\n                  🇺🇸 {t.english}\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            {/* Theme Selector */}\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"text-white hover:bg-white/20\">\n                  {theme === 'dark' ? '🌙' : '☀️'} {t.theme}\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent>\n                <DropdownMenuItem onClick={() => setTheme('light')}>\n                  ☀️ {t.light}\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => setTheme('dark')}>\n                  🌙 {t.dark}\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAgBA,mEAAmE;AACnE,MAAM,eAAe;IACnB,OAAO;IACP,UAAU;IACV,qBAAqB;IACrB,OAAO;IACP,OAAO;IACP,MAAM;IACN,SAAS;IACT,SAAS;AACX;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAe;;IACnE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IACnC,MAAM,IAAI;IAEV,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAK,WAAU;kDAA+B;;;;;;;;;;;;;;;;0CAGnD,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAsB,EAAE,KAAK;;;;;;kDAC3C,6LAAC;wCAAE,WAAU;kDAAyB,EAAE,QAAQ;;;;;;;;;;;;;;;;;;kCAIpD,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC,+IAAA,CAAA,eAAY;;kDACX,6LAAC,+IAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAQ,WAAU;;gDAA+B;gDAC3D,EAAE,mBAAmB;;;;;;;;;;;;kDAG7B,6LAAC,+IAAA,CAAA,sBAAmB;;0DAClB,6LAAC,+IAAA,CAAA,mBAAgB;gDAAC,SAAS,IAAM,YAAY;;oDAAO;oDAC5C,EAAE,OAAO;;;;;;;0DAEjB,6LAAC,+IAAA,CAAA,mBAAgB;gDAAC,SAAS,IAAM,YAAY;;oDAAO;oDAC5C,EAAE,OAAO;;;;;;;;;;;;;;;;;;;0CAMrB,6LAAC,+IAAA,CAAA,eAAY;;kDACX,6LAAC,+IAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAQ,WAAU;;gDAC/B,UAAU,SAAS,OAAO;gDAAK;gDAAE,EAAE,KAAK;;;;;;;;;;;;kDAG7C,6LAAC,+IAAA,CAAA,sBAAmB;;0DAClB,6LAAC,+IAAA,CAAA,mBAAgB;gDAAC,SAAS,IAAM,SAAS;;oDAAU;oDAC9C,EAAE,KAAK;;;;;;;0DAEb,6LAAC,+IAAA,CAAA,mBAAgB;gDAAC,SAAS,IAAM,SAAS;;oDAAS;oDAC7C,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5B;GA3DwB;;QACM,mJAAA,CAAA,WAAQ;;;KADd","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Navigation.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\n\ninterface NavigationProps {\n  activeSection: string\n  setActiveSection: (section: string) => void\n  language: string\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  dashboard: 'Übersicht',\n  grammar: 'Grammatik',\n  vocabulary: 'Wortschatz',\n  reading: 'Lesen',\n  exercises: 'Übungen',\n  progress: 'Fortschritt',\n  profile: 'Profil',\n  flashcards: 'Lernkarten',\n  search: 'Suchen...'\n}\n\nexport default function Navigation({ activeSection, setActiveSection, language }: NavigationProps) {\n  const t = translations\n\n  const navItems = [\n    { id: 'dashboard', label: t.dashboard, emoji: '🏠' },\n    { id: 'grammar', label: t.grammar, emoji: '📚' },\n    { id: 'vocabulary', label: t.vocabulary, emoji: '📖' },\n    { id: 'reading', label: t.reading, emoji: '📰' },\n    { id: 'exercises', label: t.exercises, emoji: '✏️' },\n    { id: 'flashcards', label: t.flashcards, emoji: '🃏' },\n    { id: 'progress', label: t.progress, emoji: '📊' },\n    { id: 'profile', label: t.profile, emoji: '👤' },\n  ]\n\n  return (\n    <nav className=\"bg-card border-b shadow-sm\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center space-x-1\">\n            {navItems.map((item) => (\n              <Button\n                key={item.id}\n                variant={activeSection === item.id ? \"default\" : \"ghost\"}\n                className={`px-4 py-2 text-sm font-medium transition-colors ${\n                  activeSection === item.id \n                    ? 'bg-primary text-primary-foreground' \n                    : 'text-muted-foreground hover:text-foreground'\n                }`}\n                onClick={() => setActiveSection(item.id)}\n              >\n                <span className=\"mr-2\">{item.emoji}</span>\n                {item.label}\n              </Button>\n            ))}\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <div className=\"relative\">\n              <Input\n                type=\"text\"\n                placeholder={t.search}\n                className=\"pl-10 pr-4 py-2 w-64 text-sm\"\n              />\n              <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\n                🔍\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWA,yBAAyB;AACzB,MAAM,eAAe;IACnB,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,WAAW;IACX,UAAU;IACV,SAAS;IACT,YAAY;IACZ,QAAQ;AACV;AAEe,SAAS,WAAW,EAAE,aAAa,EAAE,gBAAgB,EAAE,QAAQ,EAAmB;IAC/F,MAAM,IAAI;IAEV,MAAM,WAAW;QACf;YAAE,IAAI;YAAa,OAAO,EAAE,SAAS;YAAE,OAAO;QAAK;QACnD;YAAE,IAAI;YAAW,OAAO,EAAE,OAAO;YAAE,OAAO;QAAK;QAC/C;YAAE,IAAI;YAAc,OAAO,EAAE,UAAU;YAAE,OAAO;QAAK;QACrD;YAAE,IAAI;YAAW,OAAO,EAAE,OAAO;YAAE,OAAO;QAAK;QAC/C;YAAE,IAAI;YAAa,OAAO,EAAE,SAAS;YAAE,OAAO;QAAK;QACnD;YAAE,IAAI;YAAc,OAAO,EAAE,UAAU;YAAE,OAAO;QAAK;QACrD;YAAE,IAAI;YAAY,OAAO,EAAE,QAAQ;YAAE,OAAO;QAAK;QACjD;YAAE,IAAI;YAAW,OAAO,EAAE,OAAO;YAAE,OAAO;QAAK;KAChD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,qIAAA,CAAA,SAAM;gCAEL,SAAS,kBAAkB,KAAK,EAAE,GAAG,YAAY;gCACjD,WAAW,CAAC,gDAAgD,EAC1D,kBAAkB,KAAK,EAAE,GACrB,uCACA,+CACJ;gCACF,SAAS,IAAM,iBAAiB,KAAK,EAAE;;kDAEvC,6LAAC;wCAAK,WAAU;kDAAQ,KAAK,KAAK;;;;;;oCACjC,KAAK,KAAK;;+BAVN,KAAK,EAAE;;;;;;;;;;kCAelB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,oIAAA,CAAA,QAAK;oCACJ,MAAK;oCACL,aAAa,EAAE,MAAM;oCACrB,WAAU;;;;;;8CAEZ,6LAAC;oCAAI,WAAU;8CAA2E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASxG;KApDwB","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LevelSelector.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\n\ninterface LevelSelectorProps {\n  selectedLevel: string\n  setSelectedLevel: (level: string) => void\n  language: string\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  title: 'Wählen Sie Ihr Niveau',\n  levels: {\n    A1: 'A1 - Anfänger',\n    A2: 'A2 - Grundlagen',\n    B1: 'B1 - Mittelstufe',\n    B2: 'B2 - Fortgeschritten',\n    C1: 'C1 - Experte'\n  }\n}\n\nconst levelColors = {\n  A1: 'bg-green-100 text-green-800 border-green-200 hover:bg-green-200',\n  A2: 'bg-blue-100 text-blue-800 border-blue-200 hover:bg-blue-200',\n  B1: 'bg-yellow-100 text-yellow-800 border-yellow-200 hover:bg-yellow-200',\n  B2: 'bg-orange-100 text-orange-800 border-orange-200 hover:bg-orange-200',\n  C1: 'bg-purple-100 text-purple-800 border-purple-200 hover:bg-purple-200'\n}\n\nconst selectedLevelColors = {\n  A1: 'bg-green-600 text-white border-green-600 hover:bg-green-700',\n  A2: 'bg-blue-600 text-white border-blue-600 hover:bg-blue-700',\n  B1: 'bg-yellow-600 text-white border-yellow-600 hover:bg-yellow-700',\n  B2: 'bg-orange-600 text-white border-orange-600 hover:bg-orange-700',\n  C1: 'bg-purple-600 text-white border-purple-600 hover:bg-purple-700'\n}\n\nexport default function LevelSelector({ selectedLevel, setSelectedLevel, language }: LevelSelectorProps) {\n  const t = translations\n  const levels = ['A1', 'A2', 'B1', 'B2', 'C1']\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"text-xl font-semibold\">{t.title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n          {levels.map((level) => (\n            <Button\n              key={level}\n              variant=\"outline\"\n              className={`p-4 h-auto flex flex-col items-center justify-center transition-all duration-200 ${\n                selectedLevel === level\n                  ? selectedLevelColors[level as keyof typeof selectedLevelColors]\n                  : levelColors[level as keyof typeof levelColors]\n              }`}\n              onClick={() => setSelectedLevel(level)}\n            >\n              <div className=\"text-lg font-bold mb-1\">{level}</div>\n              <div className=\"text-xs text-center\">\n                {t.levels[level as keyof typeof t.levels].split(' - ')[1]}\n              </div>\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWA,yBAAyB;AACzB,MAAM,eAAe;IACnB,OAAO;IACP,QAAQ;QACN,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF;AAEA,MAAM,cAAc;IAClB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEA,MAAM,sBAAsB;IAC1B,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEe,SAAS,cAAc,EAAE,aAAa,EAAE,gBAAgB,EAAE,QAAQ,EAAsB;IACrG,MAAM,IAAI;IACV,MAAM,SAAS;QAAC;QAAM;QAAM;QAAM;QAAM;KAAK;IAE7C,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAyB,EAAE,KAAK;;;;;;;;;;;0BAEvD,6LAAC,mIAAA,CAAA,cAAW;0BACV,cAAA,6LAAC;oBAAI,WAAU;8BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,6LAAC,qIAAA,CAAA,SAAM;4BAEL,SAAQ;4BACR,WAAW,CAAC,iFAAiF,EAC3F,kBAAkB,QACd,mBAAmB,CAAC,MAA0C,GAC9D,WAAW,CAAC,MAAkC,EAClD;4BACF,SAAS,IAAM,iBAAiB;;8CAEhC,6LAAC;oCAAI,WAAU;8CAA0B;;;;;;8CACzC,6LAAC;oCAAI,WAAU;8CACZ,EAAE,MAAM,CAAC,MAA+B,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;;;;;;;2BAXtD;;;;;;;;;;;;;;;;;;;;;AAmBnB;KAhCwB","debugId":null}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/Dashboard.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Progress } from '@/components/ui/progress'\n\ninterface DashboardProps {\n  selectedLevel: string\n  language: string\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  welcome: 'Willkommen',\n  dailyGoal: 'Tagesziel',\n  streak: 'Serie',\n  totalWords: 'Gesamte Wörter',\n  completedLessons: 'Abgeschlossene Lektionen',\n  quickAccess: 'Schnellzugriff',\n  dailyLesson: 'Tägliche Lektion',\n  dailyLessonDesc: 'Starten Sie Ihre heutige Lerneinheit',\n  randomExercise: 'Zufällige Übung',\n  randomExerciseDesc: 'Testen Sie sich mit einer zufälligen Übung',\n  savedContent: 'Gespeicherte Inhalte',\n  savedContentDesc: 'Ihre markierten Wörter und Texte',\n  flashcardReview: 'Lernkarten-Wiederholung',\n  flashcardReviewDesc: 'Wiederholen Sie Ihre Lernkarten',\n  statistics: 'Statistiken',\n  vocabulary: 'Wortschatz',\n  grammar: 'Grammatik',\n  reading: 'Lesen',\n  exercises: 'Übungen',\n  words: 'Wörter',\n  lessons: 'Lektionen',\n  days: 'Tage',\n  start: 'Starten',\n  continue: 'Fortsetzen',\n  review: 'Wiederholen'\n}\n\nexport default function Dashboard({ selectedLevel, language }: DashboardProps) {\n  const t = translations\n\n  // Mock data - gerçek uygulamada bu veriler API'den gelecek\n  const stats = {\n    dailyGoalProgress: 65,\n    streak: 12,\n    totalWords: 2250, // +1000 eklendi\n    completedLessons: 45,\n    vocabularyProgress: 78,\n    grammarProgress: 65,\n    readingProgress: 82,\n    exercisesProgress: 71\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Welcome Section */}\n      <div className=\"text-center py-8\">\n        <h2 className=\"text-3xl font-bold mb-2\">{t.welcome}! 🎉</h2>\n        <p className=\"text-muted-foreground\">\n          Sie lernen weiterhin Deutsch auf {selectedLevel}-Niveau\n        </p>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t.dailyGoal}</CardTitle>\n            <span className=\"text-2xl\">🎯</span>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.dailyGoalProgress}%</div>\n            <Progress value={stats.dailyGoalProgress} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              {stats.dailyGoalProgress}% Ihres heutigen Ziels erreicht\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t.streak}</CardTitle>\n            <span className=\"text-2xl\">🔥</span>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.streak}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stats.streak} {t.days} in Folge\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t.totalWords}</CardTitle>\n            <span className=\"text-2xl\">📚</span>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.totalWords}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Gelernte {t.words}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t.completedLessons}</CardTitle>\n            <span className=\"text-2xl\">✅</span>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.completedLessons}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Abgeschlossene {t.lessons}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Access */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">{t.quickAccess}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"p-6 border-2 border-dashed border-muted-foreground/25 rounded-lg hover:border-primary/50 transition-colors cursor-pointer\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl mb-3\">📖</div>\n                <h4 className=\"font-semibold mb-2\">{t.dailyLesson}</h4>\n                <p className=\"text-sm text-muted-foreground mb-4\">{t.dailyLessonDesc}</p>\n                <Button className=\"w-full\">{t.start}</Button>\n              </div>\n            </div>\n\n            <div className=\"p-6 border-2 border-dashed border-muted-foreground/25 rounded-lg hover:border-primary/50 transition-colors cursor-pointer\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl mb-3\">🎲</div>\n                <h4 className=\"font-semibold mb-2\">{t.randomExercise}</h4>\n                <p className=\"text-sm text-muted-foreground mb-4\">{t.randomExerciseDesc}</p>\n                <Button variant=\"outline\" className=\"w-full\">{t.start}</Button>\n              </div>\n            </div>\n\n            <div className=\"p-6 border-2 border-dashed border-muted-foreground/25 rounded-lg hover:border-primary/50 transition-colors cursor-pointer\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl mb-3\">🃏</div>\n                <h4 className=\"font-semibold mb-2\">{t.flashcardReview}</h4>\n                <p className=\"text-sm text-muted-foreground mb-4\">{t.flashcardReviewDesc}</p>\n                <Button variant=\"outline\" className=\"w-full\">{t.review}</Button>\n              </div>\n            </div>\n\n            <div className=\"p-6 border-2 border-dashed border-muted-foreground/25 rounded-lg hover:border-primary/50 transition-colors cursor-pointer\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl mb-3\">💾</div>\n                <h4 className=\"font-semibold mb-2\">{t.savedContent}</h4>\n                <p className=\"text-sm text-muted-foreground mb-4\">{t.savedContentDesc}</p>\n                <Button variant=\"outline\" className=\"w-full\">{t.continue}</Button>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Progress Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">{t.statistics}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium\">📚 {t.vocabulary}</span>\n                  <span className=\"text-sm text-muted-foreground\">{stats.vocabularyProgress}%</span>\n                </div>\n                <Progress value={stats.vocabularyProgress} />\n              </div>\n\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium\">📖 {t.grammar}</span>\n                  <span className=\"text-sm text-muted-foreground\">{stats.grammarProgress}%</span>\n                </div>\n                <Progress value={stats.grammarProgress} />\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium\">📰 {t.reading}</span>\n                  <span className=\"text-sm text-muted-foreground\">{stats.readingProgress}%</span>\n                </div>\n                <Progress value={stats.readingProgress} />\n              </div>\n\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium\">✏️ {t.exercises}</span>\n                  <span className=\"text-sm text-muted-foreground\">{stats.exercisesProgress}%</span>\n                </div>\n                <Progress value={stats.exercisesProgress} />\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 1999, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/GrammarNew.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible'\n\ninterface GrammarProps {\n  selectedLevel: string\n  language: string\n}\n\ninterface GrammarTopic {\n  id: number\n  title: string\n  description: string\n  detailedExplanation: string\n  progress: number\n  status: 'completed' | 'inProgress' | 'notStarted'\n  exercises: number\n  duration: number\n  difficulty: string\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  title: 'Grammatik - Deutsche Grammatik',\n  subtitle: 'Lernen und üben Sie deutsche Grammatikregeln systematisch',\n  topics: 'Themen',\n  completed: 'Abgeschlossen',\n  inProgress: 'In Bearbeitung',\n  notStarted: 'Nicht begonnen',\n  start: 'Starten',\n  continue: 'Fortsetzen',\n  review: 'Wiederholen',\n  exercises: 'Übungen',\n  minutes: 'Minuten',\n  difficulty: 'Schwierigkeit',\n  explanation: 'Erklärung',\n  showExplanation: 'Erklärung anzeigen',\n  hideExplanation: 'Erklärung ausblenden'\n}\n\n// Fonksiyon ile gramer konularını oluştur\nconst generateGrammarTopics = (level: string) => {\n  const topics: GrammarTopic[] = []\n  \n  const grammarData = {\n    A1: [\n      {\n        title: 'Artikel (der, die, das)',\n        description: 'Almanca artikellerin kullanımı',\n        explanation: `\n          <h3>Artikel (der, die, das)</h3>\n          <h4>Bedeutung auf Deutsch:</h4>\n          <p>Artikel zeigen das Geschlecht eines Nomens an und sind in drei Formen unterteilt:</p>\n          <ul>\n            <li><strong>der</strong> - maskulin (männlich)</li>\n            <li><strong>die</strong> - feminin (weiblich)</li>\n            <li><strong>das</strong> - neutrum (sächlich)</li>\n          </ul>\n          <h4>Türkische Erklärung:</h4>\n          <p>Almancada her ismin bir cinsiyeti vardır ve bu cinsiyet artikellerle belirtilir. Bu artikeller isimlerin eril, dişil veya nötr olduğunu gösterir.</p>\n          <h4>Beispiele / Örnekler:</h4>\n          <ul>\n            <li>der Mann (adam), die Frau (kadın), das Kind (çocuk)</li>\n            <li>der Tisch (masa), die Katze (kedi), das Auto (araba)</li>\n          </ul>\n          <h4>Unbestimmte Artikel (Belirsiz Artikeller):</h4>\n          <ul>\n            <li><strong>ein</strong> - maskulin und neutrum</li>\n            <li><strong>eine</strong> - feminin</li>\n          </ul>\n          <h4>Verwandte Begriffe:</h4>\n          <ul>\n            <li>bestimmter Artikel (der, die, das)</li>\n            <li>unbestimmter Artikel (ein, eine)</li>\n          </ul>\n        `,\n        difficulty: 'Kolay',\n        exercises: 15,\n        duration: 20\n      },\n      {\n        title: 'Personalpronomen',\n        description: 'Kişi zamirleri (ich, du, er, sie, es...)',\n        explanation: `\n          <h3>Personalpronomen</h3>\n          <h4>Bedeutung auf Deutsch:</h4>\n          <p>Personalpronomen ersetzen Nomen und zeigen die Person an, die spricht, angesprochen wird oder über die gesprochen wird.</p>\n          <h4>Türkische Erklärung:</h4>\n          <p>Kişi zamirleri, isimlerin yerine kullanılır ve konuşan, konuşulan veya bahsedilen kişiyi belirtir.</p>\n          <h4>Beispiele / Örnekler:</h4>\n          <table style=\"border-collapse: collapse; width: 100%; margin: 10px 0;\">\n            <tr style=\"background-color: #f5f5f5;\"><th>Singular</th><th>Plural</th></tr>\n            <tr><td>ich (ben)</td><td>wir (biz)</td></tr>\n            <tr><td>du (sen)</td><td>ihr (siz - arkadaşça)</td></tr>\n            <tr><td>er/sie/es (o)</td><td>sie (onlar)</td></tr>\n            <tr><td>Sie (siz - saygılı)</td><td>Sie (sizler - saygılı)</td></tr>\n          </table>\n          <h4>Kullanım Örnekleri:</h4>\n          <ul>\n            <li>Ich bin Student. (Ben öğrenciyim.)</li>\n            <li>Du kommst aus der Türkei. (Sen Türkiye'den geliyorsun.)</li>\n            <li>Er ist Lehrer. (O öğretmendir.)</li>\n            <li>Wir lernen Deutsch. (Biz Almanca öğreniyoruz.)</li>\n          </ul>\n        `,\n        difficulty: 'Kolay',\n        exercises: 12,\n        duration: 15\n      },\n      {\n        title: 'Präsens',\n        description: 'Şimdiki zaman çekimi',\n        explanation: `<h3>Präsens</h3><p>Fiillerin şimdiki zaman çekimi</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 25\n      },\n      {\n        title: 'Akkusativ',\n        description: 'Akkusativ durumu',\n        explanation: `<h3>Akkusativ</h3><p>Doğrudan nesne durumu</p>`,\n        difficulty: 'Orta',\n        exercises: 18,\n        duration: 30\n      },\n      {\n        title: 'Negation',\n        description: 'nicht ve kein kullanımı',\n        explanation: `<h3>Olumsuzluk</h3><p>nicht ve kein ile olumsuz cümleler</p>`,\n        difficulty: 'Kolay',\n        exercises: 16,\n        duration: 20\n      },\n      {\n        title: 'Possessivartikel',\n        description: 'İyelik artikelleri',\n        explanation: `<h3>İyelik Artikelleri</h3><p>mein, dein, sein, ihr...</p>`,\n        difficulty: 'Orta',\n        exercises: 14,\n        duration: 25\n      },\n      {\n        title: 'Zahlen und Zeit',\n        description: 'Sayılar ve zaman',\n        explanation: `<h3>Sayılar ve Zaman</h3><p>Temel sayılar ve saat</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Fragewörter',\n        description: 'Soru kelimeleri',\n        explanation: `<h3>Soru Kelimeleri</h3><p>wer, was, wo, wann, wie...</p>`,\n        difficulty: 'Kolay',\n        exercises: 15,\n        duration: 20\n      },\n      {\n        title: 'Imperativ',\n        description: 'Emir kipi',\n        explanation: `<h3>Emir Kipi</h3><p>Komm!, Gehen Sie!</p>`,\n        difficulty: 'Kolay',\n        exercises: 12,\n        duration: 15\n      },\n      {\n        title: 'Adjektivdeklination (Nominativ)',\n        description: 'Sıfat çekimi - Nominativ',\n        explanation: `<h3>Sıfat Çekimi</h3><p>der gute Mann, ein guter Mann</p>`,\n        difficulty: 'Zor',\n        exercises: 18,\n        duration: 35\n      },\n      {\n        title: 'Trennbare Verben',\n        description: 'Ayrılabilen fiiller',\n        explanation: `<h3>Ayrılabilen Fiiller</h3><p>aufstehen, mitkommen, ausgehen</p>`,\n        difficulty: 'Orta',\n        exercises: 16,\n        duration: 25\n      },\n      {\n        title: 'Lokale Präpositionen',\n        description: 'Yer bildiren edatlar',\n        explanation: `<h3>Yer Edatları</h3><p>in, auf, unter, über, neben...</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      }\n    ],\n    A2: [\n      {\n        title: 'Dativ',\n        description: 'Dativ durumu ve kullanımı',\n        explanation: `<h3>Dativ</h3><p>Dolaylı nesne durumu - dem, der, dem</p>`,\n        difficulty: 'Orta',\n        exercises: 22,\n        duration: 35\n      },\n      {\n        title: 'Perfekt',\n        description: 'Geçmiş zaman',\n        explanation: `<h3>Perfekt</h3><p>haben/sein + Partizip II</p>`,\n        difficulty: 'Orta',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Modalverben',\n        description: 'Modal fiiller',\n        explanation: `<h3>Modal Fiiller</h3><p>können, müssen, wollen, sollen, dürfen</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Präteritum',\n        description: 'Geçmiş zaman (hikaye)',\n        explanation: `<h3>Präteritum</h3><p>war, hatte, ging...</p>`,\n        difficulty: 'Orta',\n        exercises: 28,\n        duration: 35\n      },\n      {\n        title: 'Adjektivdeklination (Akkusativ/Dativ)',\n        description: 'Sıfat çekimi - tüm durumlar',\n        explanation: `<h3>Sıfat Çekimi</h3><p>den guten Mann, dem guten Mann</p>`,\n        difficulty: 'Zor',\n        exercises: 30,\n        duration: 45\n      },\n      {\n        title: 'Wechselpräpositionen',\n        description: 'Değişken edatlar',\n        explanation: `<h3>Değişken Edatlar</h3><p>in, an, auf, über, unter - Akkusativ/Dativ</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Komparativ und Superlativ',\n        description: 'Karşılaştırma dereceleri',\n        explanation: `<h3>Karşılaştırma</h3><p>schön - schöner - am schönsten</p>`,\n        difficulty: 'Orta',\n        exercises: 18,\n        duration: 30\n      },\n      {\n        title: 'Reflexive Verben',\n        description: 'Dönüşlü fiiller',\n        explanation: `<h3>Dönüşlü Fiiller</h3><p>sich waschen, sich freuen</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 25\n      },\n      {\n        title: 'Temporale Präpositionen',\n        description: 'Zaman bildiren edatlar',\n        explanation: `<h3>Zaman Edatları</h3><p>am, im, um, seit, bis, vor, nach</p>`,\n        difficulty: 'Orta',\n        exercises: 16,\n        duration: 25\n      },\n      {\n        title: 'Genitiv',\n        description: 'Genitiv durumu',\n        explanation: `<h3>Genitiv</h3><p>des Mannes, der Frau - iyelik durumu</p>`,\n        difficulty: 'Zor',\n        exercises: 22,\n        duration: 35\n      },\n      {\n        title: 'Infinitiv mit zu',\n        description: 'zu ile infinitiv',\n        explanation: `<h3>zu ile Infinitiv</h3><p>Ich habe vor zu kommen.</p>`,\n        difficulty: 'Orta',\n        exercises: 15,\n        duration: 20\n      },\n      {\n        title: 'Nebensätze mit dass',\n        description: 'dass ile yan cümleler',\n        explanation: `<h3>dass Cümleleri</h3><p>Ich denke, dass er kommt.</p>`,\n        difficulty: 'Zor',\n        exercises: 20,\n        duration: 30\n      }\n    ],\n    B1: [\n      {\n        title: 'Konjunktiv II',\n        description: 'Konjunktiv II modu',\n        explanation: `<h3>Konjunktiv II</h3><p>würde + infinitiv, wäre, hätte</p>`,\n        difficulty: 'Zor',\n        exercises: 30,\n        duration: 45\n      },\n      {\n        title: 'Passiv',\n        description: 'Pasif çatı',\n        explanation: `<h3>Passiv</h3><p>werden + Partizip II</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Relativsätze',\n        description: 'İlgi cümleleri',\n        explanation: `<h3>İlgi Cümleleri</h3><p>der, die, das als Relativpronomen</p>`,\n        difficulty: 'Orta',\n        exercises: 28,\n        duration: 35\n      },\n      {\n        title: 'Plusquamperfekt',\n        description: 'Geçmişin geçmişi',\n        explanation: `<h3>Plusquamperfekt</h3><p>hatte/war + Partizip II</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Futur I',\n        description: 'Gelecek zaman',\n        explanation: `<h3>Futur I</h3><p>werden + infinitiv</p>`,\n        difficulty: 'Orta',\n        exercises: 18,\n        duration: 25\n      },\n      {\n        title: 'Kausale Nebensätze',\n        description: 'Neden bildiren yan cümleler',\n        explanation: `<h3>Neden Cümleleri</h3><p>weil, da, denn</p>`,\n        difficulty: 'Orta',\n        exercises: 22,\n        duration: 30\n      },\n      {\n        title: 'Temporale Nebensätze',\n        description: 'Zaman bildiren yan cümleler',\n        explanation: `<h3>Zaman Cümleleri</h3><p>als, wenn, während, bevor, nachdem</p>`,\n        difficulty: 'Orta',\n        exercises: 25,\n        duration: 35\n      },\n      {\n        title: 'Konditionale Nebensätze',\n        description: 'Şart cümleleri',\n        explanation: `<h3>Şart Cümleleri</h3><p>wenn, falls</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Finale Nebensätze',\n        description: 'Amaç bildiren yan cümleler',\n        explanation: `<h3>Amaç Cümleleri</h3><p>damit, um...zu</p>`,\n        difficulty: 'Orta',\n        exercises: 18,\n        duration: 25\n      },\n      {\n        title: 'Konzessive Nebensätze',\n        description: 'Karşıtlık bildiren yan cümleler',\n        explanation: `<h3>Karşıtlık Cümleleri</h3><p>obwohl, trotzdem</p>`,\n        difficulty: 'Zor',\n        exercises: 22,\n        duration: 35\n      },\n      {\n        title: 'Indirekte Rede',\n        description: 'Dolaylı anlatım',\n        explanation: `<h3>Dolaylı Anlatım</h3><p>Er sagt, dass er kommt.</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Partizip I und II',\n        description: 'Ortaçlar',\n        explanation: `<h3>Ortaçlar</h3><p>lachend, gelacht</p>`,\n        difficulty: 'Zor',\n        exercises: 20,\n        duration: 30\n      }\n    ],\n    B2: [\n      {\n        title: 'Konjunktiv I',\n        description: 'Konjunktiv I ve dolaylı anlatım',\n        explanation: `<h3>Konjunktiv I</h3><p>Dolaylı anlatım için kullanılır</p>`,\n        difficulty: 'Zor',\n        exercises: 35,\n        duration: 50\n      },\n      {\n        title: 'Erweiterte Partizipien',\n        description: 'Genişletilmiş ortaç yapıları',\n        explanation: `<h3>Genişletilmiş Ortaçlar</h3><p>das gestern gekaufte Buch</p>`,\n        difficulty: 'Zor',\n        exercises: 30,\n        duration: 45\n      },\n      {\n        title: 'Nominalisierung',\n        description: 'İsimleştirme',\n        explanation: `<h3>İsimleştirme</h3><p>Fiil ve sıfatların isim yapılması</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Funktionsverbgefüge',\n        description: 'İşlevsel fiil birleşimleri',\n        explanation: `<h3>İşlevsel Fiil Birleşimleri</h3><p>zur Verfügung stehen, in Frage kommen</p>`,\n        difficulty: 'Zor',\n        exercises: 28,\n        duration: 45\n      },\n      {\n        title: 'Modalpartikeln',\n        description: 'Modal partiküller',\n        explanation: `<h3>Modal Partiküller</h3><p>doch, mal, ja, denn</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Subjektive Modalverben',\n        description: 'Öznel modal fiiller',\n        explanation: `<h3>Öznel Modal Fiiller</h3><p>Er muss krank sein. (tahmin)</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 35\n      },\n      {\n        title: 'Futur II',\n        description: 'Gelecekte tamamlanmış zaman',\n        explanation: `<h3>Futur II</h3><p>werden + Partizip II + haben/sein</p>`,\n        difficulty: 'Zor',\n        exercises: 18,\n        duration: 30\n      },\n      {\n        title: 'Irreale Bedingungssätze',\n        description: 'Gerçek dışı şart cümleleri',\n        explanation: `<h3>Gerçek Dışı Şart</h3><p>Wenn ich reich wäre...</p>`,\n        difficulty: 'Zor',\n        exercises: 30,\n        duration: 45\n      },\n      {\n        title: 'Konsekutive Nebensätze',\n        description: 'Sonuç bildiren yan cümleler',\n        explanation: `<h3>Sonuç Cümleleri</h3><p>so...dass, sodass</p>`,\n        difficulty: 'Orta',\n        exercises: 22,\n        duration: 35\n      },\n      {\n        title: 'Adversative Nebensätze',\n        description: 'Karşıtlık bildiren yan cümleler',\n        explanation: `<h3>Karşıtlık Cümleleri</h3><p>während, wohingegen</p>`,\n        difficulty: 'Orta',\n        exercises: 20,\n        duration: 30\n      },\n      {\n        title: 'Modale Nebensätze',\n        description: 'Tarz bildiren yan cümleler',\n        explanation: `<h3>Tarz Cümleleri</h3><p>indem, ohne dass</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Attributsätze',\n        description: 'Niteleme cümleleri',\n        explanation: `<h3>Niteleme Cümleleri</h3><p>Genişletilmiş niteleme yapıları</p>`,\n        difficulty: 'Zor',\n        exercises: 28,\n        duration: 45\n      }\n    ],\n    C1: [\n      {\n        title: 'Erweiterte Infinitivkonstruktionen',\n        description: 'Genişletilmiş infinitiv yapıları',\n        explanation: `<h3>Genişletilmiş Infinitiv</h3><p>Karmaşık infinitiv yapıları</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 40,\n        duration: 60\n      },\n      {\n        title: 'Komplexe Partizipialkonstruktionen',\n        description: 'Karmaşık ortaç yapıları',\n        explanation: `<h3>Karmaşık Ortaç Yapıları</h3><p>İleri düzey ortaç kullanımı</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 35,\n        duration: 55\n      },\n      {\n        title: 'Stilistische Varianten',\n        description: 'Üslup çeşitleri',\n        explanation: `<h3>Üslup Çeşitleri</h3><p>Farklı metin türleri için üslup</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 30,\n        duration: 50\n      },\n      {\n        title: 'Textverknüpfung',\n        description: 'Metin bağlantı elemanları',\n        explanation: `<h3>Metin Bağlantıları</h3><p>Metinleri bağlayan yapılar</p>`,\n        difficulty: 'Zor',\n        exercises: 32,\n        duration: 45\n      },\n      {\n        title: 'Wissenschaftssprache',\n        description: 'Bilimsel dil',\n        explanation: `<h3>Bilimsel Dil</h3><p>Akademik yazım kuralları</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 28,\n        duration: 50\n      },\n      {\n        title: 'Fachsprachliche Strukturen',\n        description: 'Uzmanlık dili yapıları',\n        explanation: `<h3>Uzmanlık Dili</h3><p>Teknik ve mesleki dil</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 25,\n        duration: 45\n      },\n      {\n        title: 'Rhetorische Mittel',\n        description: 'Retorik araçları',\n        explanation: `<h3>Retorik Araçları</h3><p>Etkili konuşma ve yazma teknikleri</p>`,\n        difficulty: 'Zor',\n        exercises: 30,\n        duration: 40\n      },\n      {\n        title: 'Idiomatische Wendungen',\n        description: 'Deyimsel ifadeler',\n        explanation: `<h3>Deyimsel İfadeler</h3><p>Almanca deyimler ve kullanımı</p>`,\n        difficulty: 'Zor',\n        exercises: 35,\n        duration: 45\n      },\n      {\n        title: 'Diskursmarker',\n        description: 'Söylem belirleyicileri',\n        explanation: `<h3>Söylem Belirleyicileri</h3><p>Metni organize eden yapılar</p>`,\n        difficulty: 'Zor',\n        exercises: 25,\n        duration: 40\n      },\n      {\n        title: 'Pragmatische Aspekte',\n        description: 'Edimbilimsel yönler',\n        explanation: `<h3>Edimbilimsel Yönler</h3><p>Bağlama uygun dil kullanımı</p>`,\n        difficulty: 'Çok Zor',\n        exercises: 30,\n        duration: 50\n      }\n    ]\n  }\n\n  const levelData = grammarData[level as keyof typeof grammarData] || grammarData.A1\n  \n  levelData.forEach((topic, index) => {\n    const progress = Math.floor(Math.random() * 101)\n    let status: 'completed' | 'inProgress' | 'notStarted'\n    \n    if (progress === 100) status = 'completed'\n    else if (progress > 0) status = 'inProgress'\n    else status = 'notStarted'\n    \n    topics.push({\n      id: index + 1,\n      title: topic.title,\n      description: topic.description,\n      detailedExplanation: topic.explanation,\n      progress,\n      status,\n      exercises: topic.exercises,\n      duration: topic.duration,\n      difficulty: topic.difficulty\n    })\n  })\n  \n  return topics\n}\n\nconst grammarTopics = {\n  A1: generateGrammarTopics('A1'),\n  A2: generateGrammarTopics('A2'),\n  B1: generateGrammarTopics('B1'),\n  B2: generateGrammarTopics('B2'),\n  C1: generateGrammarTopics('C1')\n}\n\nexport default function Grammar({ selectedLevel, language }: GrammarProps) {\n  const t = translations\n  const topics = grammarTopics[selectedLevel as keyof typeof grammarTopics] || []\n  const [expandedTopic, setExpandedTopic] = useState<number | null>(null)\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800'\n      case 'inProgress':\n        return 'bg-blue-100 text-blue-800'\n      case 'notStarted':\n        return 'bg-gray-100 text-gray-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.completed\n      case 'inProgress':\n        return t.inProgress\n      case 'notStarted':\n        return t.notStarted\n      default:\n        return t.notStarted\n    }\n  }\n\n  const getButtonText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.review\n      case 'inProgress':\n        return t.continue\n      case 'notStarted':\n        return t.start\n      default:\n        return t.start\n    }\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Kolay':\n        return 'bg-green-100 text-green-800'\n      case 'Orta':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'Zor':\n        return 'bg-orange-100 text-orange-800'\n      case 'Çok Zor':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const completedTopics = topics.filter(t => t.status === 'completed').length\n  const inProgressTopics = topics.filter(t => t.status === 'inProgress').length\n  const totalExercises = topics.reduce((sum, topic) => sum + topic.exercises, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> Niveau\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{topics.length}</span> {t.topics}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{completedTopics}</span> {t.completed}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{totalExercises}</span> {t.exercises}\n          </div>\n        </div>\n      </div>\n\n      {/* Grammar Topics */}\n      <div className=\"grid grid-cols-1 gap-6\">\n        {topics.map((topic) => (\n          <Card key={topic.id} className=\"hover:shadow-lg transition-shadow\">\n            <CardHeader>\n              <div className=\"flex justify-between items-start mb-2\">\n                <div className=\"flex-1\">\n                  <CardTitle className=\"text-lg mb-2\">{topic.title}</CardTitle>\n                  <p className=\"text-sm text-muted-foreground mb-3\">{topic.description}</p>\n                  \n                  <div className=\"flex flex-wrap gap-2 mb-3\">\n                    <Badge className={getStatusColor(topic.status)}>\n                      {getStatusText(topic.status)}\n                    </Badge>\n                    <Badge className={getDifficultyColor(topic.difficulty)}>\n                      {t.difficulty}: {topic.difficulty}\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            </CardHeader>\n            \n            <CardContent>\n              <div className=\"space-y-4\">\n                {/* Progress */}\n                {topic.progress > 0 && (\n                  <div>\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <span className=\"text-sm font-medium\">İlerleme</span>\n                      <span className=\"text-sm text-muted-foreground\">{topic.progress}%</span>\n                    </div>\n                    <Progress value={topic.progress} />\n                  </div>\n                )}\n\n                {/* Details */}\n                <div className=\"flex justify-between items-center text-sm text-muted-foreground\">\n                  <div className=\"flex items-center space-x-4\">\n                    <span>✏️ {topic.exercises} {t.exercises}</span>\n                    <span>⏱️ {topic.duration} {t.minutes}</span>\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex justify-between items-center\">\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={() => setExpandedTopic(expandedTopic === topic.id ? null : topic.id)}\n                  >\n                    📖 {expandedTopic === topic.id ? t.hideExplanation : t.showExplanation}\n                  </Button>\n                  \n                  <Button \n                    variant={topic.status === 'completed' ? 'outline' : 'default'}\n                    size=\"sm\"\n                  >\n                    {getButtonText(topic.status)}\n                  </Button>\n                </div>\n\n                {/* Detailed Explanation */}\n                {expandedTopic === topic.id && (\n                  <div className=\"mt-4 p-4 bg-blue-50 rounded-lg border-l-4 border-blue-400\">\n                    <div \n                      className=\"prose prose-sm max-w-none\"\n                      dangerouslySetInnerHTML={{ __html: topic.detailedExplanation }}\n                    />\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Summary Stats */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Grammatik-Statistiken</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">{completedTopics}</div>\n              <div className=\"text-sm text-green-600\">{t.completed}</div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{inProgressTopics}</div>\n              <div className=\"text-sm text-blue-600\">{t.inProgress}</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-600\">\n                {topics.length - completedTopics - inProgressTopics}\n              </div>\n              <div className=\"text-sm text-gray-600\">{t.notStarted}</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">{totalExercises}</div>\n              <div className=\"text-sm text-purple-600\">Gesamt {t.exercises}</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3146, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/VocabularyNew.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Progress } from '@/components/ui/progress'\n\ninterface VocabularyProps {\n  selectedLevel: string\n  language: string\n}\n\ninterface Word {\n  german: string\n  turkish: string\n  english: string\n  status: 'learned' | 'learning' | 'new'\n  difficulty: 'easy' | 'medium' | 'hard' | 'very hard'\n  pronunciation: string\n  example?: string\n  audioUrl?: string\n  wordType: 'isim' | 'fiil' | 'sıfat' | 'zamir'\n  detailedExplanation?: string\n}\n\n// Arayüz tamamen Almanca - dil seçimi sadece kelime anlamları için\nconst translations = {\n  title: 'Wortschatz - Kelime Hazinesi',\n  subtitle: 'Erweitern und festigen Sie Ihren deutschen Wortschatz',\n  search: 'Wörter suchen...',\n  categories: 'Kategorien',\n  words: 'Wörter',\n  learned: 'Gelernt',\n  learning: 'Lernen',\n  new: 'Neu',\n  practice: 'Üben',\n  learn: 'Lernen',\n  review: 'Wiederholen',\n  addToFlashcards: 'Zu Lernkarten hinzufügen',\n  playAudio: 'Audio abspielen',\n  showExample: 'Beispiel zeigen',\n  difficulty: 'Schwierigkeit',\n  frequency: 'Häufigkeit',\n  pronunciation: 'Aussprache',\n  example: 'Beispiel',\n  close: 'Schließen',\n  wordType: 'Wortart',\n  detailedExplanation: 'Detaillierte Erklärung',\n  showDetails: 'Details anzeigen'\n}\n\nconst vocabularyCategories = {\n  A1: [\n    {\n      id: 1,\n      name: 'Familie (Aile)',\n      totalWords: 1200,\n      learnedWords: 950,\n      color: 'bg-pink-100 text-pink-800',\n      emoji: '👨‍👩‍👧‍👦',\n      words: [\n        { german: 'die Familie', turkish: 'aile', english: 'family', status: 'learned', difficulty: 'easy', pronunciation: '/faˈmiːli̯ə/', example: 'Meine Familie ist sehr groß.', wordType: 'isim', detailedExplanation: 'Bir isim. Kan bağı veya evlilik yoluyla birbirine bağlı kişilerin oluşturduğu toplumsal birimi ifade eder.' },\n        { german: 'der Vater', turkish: 'baba', english: 'father', status: 'learned', difficulty: 'easy', pronunciation: '/ˈfaːtɐ/', example: 'Mein Vater arbeitet im Büro.', wordType: 'isim', detailedExplanation: 'Erkek ebeveyn anlamına gelen bir isim. Ailenin erkek reisi olarak kabul edilir.' },\n        { german: 'die Mutter', turkish: 'anne', english: 'mother', status: 'learned', difficulty: 'easy', pronunciation: '/ˈmʊtɐ/', example: 'Meine Mutter kocht sehr gut.', wordType: 'isim', detailedExplanation: 'Kadın ebeveyn anlamına gelen bir isim. Çocuğu doğuran ve büyüten kişidir.' },\n        { german: 'das Kind', turkish: 'çocuk', english: 'child', status: 'learning', difficulty: 'easy', pronunciation: '/kɪnt/', example: 'Das Kind spielt im Garten.', wordType: 'isim', detailedExplanation: 'Henüz yetişkin olmamış genç insan anlamına gelen bir isim.' },\n        { german: 'der Bruder', turkish: 'erkek kardeş', english: 'brother', status: 'new', difficulty: 'easy', pronunciation: '/ˈbruːdɐ/', example: 'Mein Bruder ist älter als ich.', wordType: 'isim', detailedExplanation: 'Aynı ebeveynlere sahip erkek kardeş anlamına gelen bir isim.' },\n        { german: 'lieben', turkish: 'sevmek', english: 'to love', status: 'learned', difficulty: 'easy', pronunciation: '/ˈliːbən/', example: 'Ich liebe meine Familie.', wordType: 'fiil', detailedExplanation: 'Güçlü sevgi ve bağlılık hissetmek anlamına gelen bir fiil.' },\n        { german: 'groß', turkish: 'büyük', english: 'big/tall', status: 'learned', difficulty: 'easy', pronunciation: '/ɡroːs/', example: 'Mein Vater ist sehr groß.', wordType: 'sıfat', detailedExplanation: 'Boyut, yaş veya önem bakımından büyük olan şeyleri tanımlayan bir sıfat.' },\n        { german: 'ich', turkish: 'ben', english: 'I', status: 'learned', difficulty: 'easy', pronunciation: '/ɪç/', example: 'Ich bin glücklich.', wordType: 'zamir', detailedExplanation: 'Birinci tekil şahıs zamiri. Konuşan kişinin kendisini ifade eder.' }\n      ] as Word[]\n    }\n  ],\n  A2: [\n    {\n      id: 6,\n      name: 'Beruf (Meslek)',\n      totalWords: 1250,\n      learnedWords: 1000,\n      color: 'bg-blue-100 text-blue-800',\n      emoji: '💼',\n      words: [\n        { german: 'der Arzt', turkish: 'doktor', english: 'doctor', status: 'learned', difficulty: 'medium', pronunciation: '/aʁtst/', example: 'Der Arzt hilft kranken Menschen.', wordType: 'isim', detailedExplanation: 'Tıp eğitimi almış, hastalıkları teşhis eden ve tedavi eden kişi.' },\n        { german: 'arbeiten', turkish: 'çalışmak', english: 'to work', status: 'learned', difficulty: 'medium', pronunciation: '/ˈaʁbaɪ̯tən/', example: 'Ich arbeite in einem Büro.', wordType: 'fiil', detailedExplanation: 'Bir iş yaparak para kazanmak, meslek icra etmek anlamına gelen bir fiil.' }\n      ] as Word[]\n    }\n  ],\n  B1: [\n    {\n      id: 7,\n      name: 'Gefühle & Emotionen (Duygular)',\n      totalWords: 3500,\n      learnedWords: 2800,\n      color: 'bg-pink-100 text-pink-800',\n      emoji: '😊',\n      words: [\n        { german: 'glücklich', turkish: 'mutlu', english: 'happy', status: 'learned', difficulty: 'medium', pronunciation: '/ˈɡlʏklɪç/', example: 'Ich bin sehr glücklich heute.', wordType: 'sıfat', detailedExplanation: 'İç huzur ve memnuniyet hissi veren pozitif duygusal durumu ifade eden bir sıfat. Kişinin yaşamından tatmin olduğunu gösterir.' },\n        { german: 'traurig', turkish: 'üzgün', english: 'sad', status: 'learning', difficulty: 'medium', pronunciation: '/ˈtʁaʊ̯ʁɪç/', example: 'Sie ist traurig wegen der schlechten Nachricht.', wordType: 'sıfat', detailedExplanation: 'Keder, üzüntü ve melankolik hisler yaşayan kişilerin durumunu tanımlayan bir sıfat.' },\n        { german: 'fühlen', turkish: 'hissetmek', english: 'to feel', status: 'learned', difficulty: 'medium', pronunciation: '/ˈfyːlən/', example: 'Ich fühle mich heute gut.', wordType: 'fiil', detailedExplanation: 'Duygusal veya fiziksel bir durumu deneyimlemek, hissetmek anlamına gelen bir fiil.' },\n        { german: 'er', turkish: 'o (erkek)', english: 'he', status: 'learned', difficulty: 'easy', pronunciation: '/eːɐ̯/', example: 'Er ist mein Freund.', wordType: 'zamir', detailedExplanation: 'Üçüncü tekil şahıs erkek zamiri. Erkek bir kişiyi ifade ederken kullanılır.' }\n      ] as Word[]\n    }\n  ],\n  B2: [\n    {\n      id: 9,\n      name: 'Wissenschaft & Technik (Bilim & Teknoloji)',\n      totalWords: 3000,\n      learnedWords: 2200,\n      color: 'bg-indigo-100 text-indigo-800',\n      emoji: '🔬',\n      words: [\n        { german: 'die Forschung', turkish: 'araştırma', english: 'research', status: 'learned', difficulty: 'hard', pronunciation: '/ˈfɔʁʃʊŋ/', example: 'Die Forschung ist sehr wichtig.', wordType: 'isim', detailedExplanation: 'Bilimsel yöntemlerle yeni bilgiler elde etme, keşif yapma süreci. Sistematik araştırma faaliyeti.' },\n        { german: 'entwickeln', turkish: 'geliştirmek', english: 'to develop', status: 'learning', difficulty: 'hard', pronunciation: '/ɛntˈvɪkl̩n/', example: 'Wir entwickeln neue Technologien.', wordType: 'fiil', detailedExplanation: 'Bir şeyi daha iyi, daha gelişmiş hale getirmek, ilerletmek anlamına gelen bir fiil.' },\n        { german: 'innovativ', turkish: 'yenilikçi', english: 'innovative', status: 'new', difficulty: 'hard', pronunciation: '/ɪnovaˈtiːf/', example: 'Das ist eine innovative Lösung.', wordType: 'sıfat', detailedExplanation: 'Yeni fikirler getiren, yaratıcı çözümler üreten durumu tanımlayan bir sıfat.' },\n        { german: 'etwas', turkish: 'bir şey', english: 'something', status: 'learned', difficulty: 'medium', pronunciation: '/ˈɛtvas/', example: 'Ich habe etwas Interessantes gefunden.', wordType: 'zamir', detailedExplanation: 'Belirsiz bir nesne veya durumu ifade eden zamir. Tam olarak tanımlanmamış bir şeyi belirtir.' }\n      ] as Word[]\n    }\n  ],\n  C1: [\n    {\n      id: 11,\n      name: 'Philosophie & Abstrakte Begriffe (Felsefe & Soyut Kavramlar)',\n      totalWords: 3000,\n      learnedWords: 2000,\n      color: 'bg-gray-100 text-gray-800',\n      emoji: '🤔',\n      words: [\n        { german: 'die Erkenntnis', turkish: 'bilgi/kavrayış', english: 'knowledge/insight', status: 'learning', difficulty: 'very hard', pronunciation: '/ɛɐ̯ˈkɛntnɪs/', example: 'Diese Erkenntnis ist sehr wertvoll.', wordType: 'isim', detailedExplanation: 'Derin anlayış ve kavrayış sonucu elde edilen bilgi. Felsefi ve bilimsel düşüncenin temel kavramı.' },\n        { german: 'reflektieren', turkish: 'düşünmek/yansıtmak', english: 'to reflect', status: 'new', difficulty: 'very hard', pronunciation: '/ʁeflɛkˈtiːʁən/', example: 'Ich reflektiere über meine Erfahrungen.', wordType: 'fiil', detailedExplanation: 'Derin düşünmek, bir konu üzerinde dikkatli bir şekilde düşünce yürütmek anlamına gelen bir fiil.' },\n        { german: 'abstrakt', turkish: 'soyut', english: 'abstract', status: 'learning', difficulty: 'very hard', pronunciation: '/apˈstʁakt/', example: 'Das ist ein abstrakter Begriff.', wordType: 'sıfat', detailedExplanation: 'Somut olmayan, kavramsal düzeyde olan, zihinsel olarak tasarlanan durumu tanımlayan bir sıfat.' },\n        { german: 'jemand', turkish: 'birisi', english: 'someone', status: 'learned', difficulty: 'medium', pronunciation: '/ˈjeːmant/', example: 'Jemand hat angerufen.', wordType: 'zamir', detailedExplanation: 'Belirsiz bir kişiyi ifade eden zamir. Kimliği bilinmeyen veya önemli olmayan bir kişiyi belirtir.' }\n      ] as Word[]\n    }\n  ]\n}\n\nexport default function Vocabulary({ selectedLevel, language }: VocabularyProps) {\n  const t = translations\n  const categories = vocabularyCategories[selectedLevel as keyof typeof vocabularyCategories] || []\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState<number | null>(null)\n  const [showExample, setShowExample] = useState<number | null>(null)\n  const [showDetails, setShowDetails] = useState<number | null>(null)\n\n  // Ses çalma fonksiyonu\n  const playAudio = (word: string) => {\n    try {\n      const utterance = new SpeechSynthesisUtterance(word)\n      utterance.lang = 'de-DE'\n      utterance.rate = 0.8\n      utterance.pitch = 1\n      \n      const voices = speechSynthesis.getVoices()\n      const germanVoice = voices.find(voice => voice.lang.includes('de'))\n      if (germanVoice) {\n        utterance.voice = germanVoice\n      }\n      \n      speechSynthesis.speak(utterance)\n    } catch (error) {\n      console.error('Ses çalınamadı:', error)\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'learned': return 'bg-green-100 text-green-800'\n      case 'learning': return 'bg-blue-100 text-blue-800'\n      case 'new': return 'bg-gray-100 text-gray-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'learned': return t.learned\n      case 'learning': return t.learning\n      case 'new': return t.new\n      default: return t.new\n    }\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'bg-green-100 text-green-800'\n      case 'medium': return 'bg-yellow-100 text-yellow-800'\n      case 'hard': return 'bg-orange-100 text-orange-800'\n      case 'very hard': return 'bg-red-100 text-red-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getWordTypeColor = (wordType: string) => {\n    switch (wordType) {\n      case 'isim': return 'bg-blue-100 text-blue-800'\n      case 'fiil': return 'bg-green-100 text-green-800'\n      case 'sıfat': return 'bg-purple-100 text-purple-800'\n      case 'zamir': return 'bg-orange-100 text-orange-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const totalWords = categories.reduce((sum, cat) => sum + cat.totalWords, 0)\n  const totalLearned = categories.reduce((sum, cat) => sum + cat.learnedWords, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> Niveau\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{totalLearned}/{totalWords}</span> {t.words}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{Math.round((totalLearned/totalWords) * 100)}%</span> abgeschlossen\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder={t.search}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\n              🔍\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Categories */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {categories.map((category) => (\n          <Card key={category.id} className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-2xl\">{category.emoji}</span>\n                  <div>\n                    <CardTitle className=\"text-lg\">{category.name}</CardTitle>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {category.learnedWords}/{category.totalWords} {t.words}\n                    </p>\n                  </div>\n                </div>\n                <Badge className={category.color}>\n                  {Math.round((category.learnedWords/category.totalWords) * 100)}%\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <Progress value={(category.learnedWords/category.totalWords) * 100} />\n                \n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    {category.totalWords - category.learnedWords} Wörter übrig\n                  </div>\n                  <Button \n                    size=\"sm\"\n                    onClick={() => setSelectedCategory(category.id)}\n                  >\n                    {t.practice}\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Word Details Modal/Section */}\n      {selectedCategory && (\n        <Card>\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <CardTitle>\n                {categories.find(c => c.id === selectedCategory)?.name} - Wörter\n              </CardTitle>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setSelectedCategory(null)}\n              >\n                {t.close}\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {categories.find(c => c.id === selectedCategory)?.words.map((word, index) => (\n                <div key={index} className=\"p-4 border rounded-lg hover:bg-muted/50 transition-colors\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h4 className=\"font-semibold text-lg\">{word.german}</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        🇹🇷 {word.turkish} • 🇺🇸 {word.english}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        {t.pronunciation}: {word.pronunciation}\n                      </p>\n                    </div>\n                    <div className=\"flex flex-col space-y-1\">\n                      <Badge className={getStatusColor(word.status)}>\n                        {getStatusText(word.status)}\n                      </Badge>\n                      <Badge className={getDifficultyColor(word.difficulty)}>\n                        {word.difficulty}\n                      </Badge>\n                      <Badge className={getWordTypeColor(word.wordType)}>\n                        {word.wordType}\n                      </Badge>\n                    </div>\n                  </div>\n                  \n                  {/* Örnek cümle gösterme */}\n                  {showExample === index && word.example && (\n                    <div className=\"mt-3 p-3 bg-blue-50 rounded-lg\">\n                      <p className=\"text-sm font-medium text-blue-800\">\n                        {t.example}: {word.example}\n                      </p>\n                    </div>\n                  )}\n\n                  {/* Detaylı açıklama gösterme */}\n                  {showDetails === index && word.detailedExplanation && (\n                    <div className=\"mt-3 p-3 bg-green-50 rounded-lg\">\n                      <p className=\"text-sm font-medium text-green-800\">\n                        {t.detailedExplanation}: {word.detailedExplanation}\n                      </p>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex flex-wrap gap-2 mt-3\">\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => playAudio(word.german)}\n                    >\n                      🔊 {t.playAudio}\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => setShowExample(showExample === index ? null : index)}\n                    >\n                      📝 {t.showExample}\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => setShowDetails(showDetails === index ? null : index)}\n                    >\n                      📖 {t.showDetails}\n                    </Button>\n                    <Button size=\"sm\" variant=\"outline\">\n                      🃏 {t.addToFlashcards}\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Statistics */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Wortschatz-Statistiken</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">{totalLearned}</div>\n              <div className=\"text-sm text-green-600\">{t.learned}</div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {categories.reduce((sum, cat) => sum + cat.words.filter(w => w.status === 'learning').length, 0)}\n              </div>\n              <div className=\"text-sm text-blue-600\">{t.learning}</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-600\">\n                {totalWords - totalLearned}\n              </div>\n              <div className=\"text-sm text-gray-600\">{t.new}</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">{categories.length}</div>\n              <div className=\"text-sm text-purple-600\">{t.categories}</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4255, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/ReadingNew.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Progress } from '@/components/ui/progress'\n\ninterface ReadingProps {\n  selectedLevel: string\n  language: string\n}\n\ninterface ReadingText {\n  id: number\n  title: string\n  summary: string\n  content: string\n  difficulty: 'easy' | 'medium' | 'hard' | 'very hard'\n  readingTime: number\n  category: string\n  status: 'completed' | 'inProgress' | 'notStarted'\n  questions?: Question[]\n}\n\ninterface Question {\n  id: number\n  question: string\n  options: string[]\n  correctAnswer: number\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  title: 'Lesen - Deutsche Texte',\n  subtitle: 'Verbessern Sie Ihr Leseverständnis mit authentischen deutschen Texten',\n  search: 'Texte suchen...',\n  categories: 'Kategorien',\n  texts: 'Texte',\n  completed: 'Gelesen',\n  inProgress: 'In Bearbeitung',\n  notStarted: 'Nicht begonnen',\n  readText: 'Text lesen',\n  continueReading: 'Weiterlesen',\n  reviewText: 'Text wiederholen',\n  difficulty: 'Schwierigkeit',\n  readingTime: 'Lesezeit',\n  minutes: 'Minuten',\n  category: 'Kategorie',\n  close: 'Schließen',\n  questions: 'Fragen',\n  showQuestions: 'Fragen anzeigen',\n  hideQuestions: 'Fragen ausblenden'\n}\n\n// Funktion zum Generieren von Beispieltexten\nconst generateTexts = (level: string, count: number): ReadingText[] => {\n  const texts: ReadingText[] = []\n  \n  const categories = {\n    A1: ['Familie', 'Alltag', 'Einkaufen', 'Hobbys', 'Wetter', 'Essen', 'Schule', 'Freizeit', 'Tiere', 'Farben'],\n    A2: ['Reisen', 'Beruf', 'Kultur', 'Sport', 'Gesundheit', 'Wohnen', 'Verkehr', 'Medien', 'Natur', 'Feste'],\n    B1: ['Umwelt', 'Bildung', 'Technologie', 'Politik', 'Wirtschaft', 'Gesellschaft', 'Kunst', 'Geschichte', 'Wissenschaft', 'Zukunft'],\n    B2: ['Globalisierung', 'Innovation', 'Nachhaltigkeit', 'Digitalisierung', 'Kommunikation', 'Philosophie', 'Psychologie', 'Soziologie', 'Ethik', 'Forschung'],\n    C1: ['Gesellschaft', 'Wissenschaft', 'Philosophie', 'Literatur', 'Komplexe Themen', 'Abstrakte Konzepte', 'Kritische Analyse', 'Theorien', 'Diskurse', 'Reflexion']\n  }\n\n  const difficulties = {\n    A1: ['easy', 'easy', 'easy', 'medium'],\n    A2: ['easy', 'medium', 'medium', 'medium'],\n    B1: ['medium', 'medium', 'hard', 'hard'],\n    B2: ['medium', 'hard', 'hard', 'very hard'],\n    C1: ['hard', 'hard', 'very hard', 'very hard']\n  }\n\n  const readingTimes = {\n    A1: [2, 3, 4, 5],\n    A2: [4, 5, 6, 7],\n    B1: [6, 7, 8, 9],\n    B2: [8, 9, 10, 12],\n    C1: [10, 12, 15, 18]\n  }\n\n  const sampleTitles = {\n    A1: [\n      'Meine Familie', 'Ein Tag in der Schule', 'Im Supermarkt', 'Mein Hobby', 'Das Wetter heute',\n      'Mein Haustier', 'Am Wochenende', 'In der Küche', 'Meine Freunde', 'Der Park',\n      'Im Restaurant', 'Mein Zimmer', 'Die Jahreszeiten', 'Beim Arzt', 'Im Zoo',\n      'Meine Kleidung', 'Der Geburtstag', 'In der Stadt', 'Das Auto', 'Die Schule'\n    ],\n    A2: [\n      'Urlaub in den Alpen', 'Arbeiten in Deutschland', 'Deutsche Feste', 'Sport treiben', 'Gesund leben',\n      'Eine neue Wohnung', 'Mit dem Zug fahren', 'Fernsehen schauen', 'Im Wald spazieren', 'Weihnachtsmarkt',\n      'Ein Bewerbungsgespräch', 'Beim Zahnarzt', 'Eine Party organisieren', 'Im Museum', 'Kochen lernen',\n      'Ein neues Hobby', 'Umzug nach Berlin', 'Deutsch lernen', 'Im Fitnessstudio', 'Einkaufen im Internet'\n    ],\n    B1: [\n      'Umweltschutz im Alltag', 'Digitalisierung in der Bildung', 'Erneuerbare Energien', 'Social Media', 'Klimawandel',\n      'Künstliche Intelligenz', 'Demokratie heute', 'Globale Wirtschaft', 'Moderne Kunst', 'Deutsche Geschichte',\n      'Medizinische Forschung', 'Die Zukunft der Arbeit', 'Stadtentwicklung', 'Internationale Politik', 'Kultureller Austausch',\n      'Technologischer Fortschritt', 'Bildungssystem', 'Nachhaltigkeit', 'Migration', 'Europäische Union'\n    ],\n    B2: [\n      'Die Zukunft der Mobilität', 'Globalisierung und Kultur', 'Innovation in der Medizin', 'Digitale Transformation', 'Interkulturelle Kommunikation',\n      'Philosophie des Geistes', 'Psychologie der Motivation', 'Soziologie der Familie', 'Ethik in der Wissenschaft', 'Moderne Forschungsmethoden',\n      'Gesellschaftlicher Wandel', 'Technologie und Mensch', 'Nachhaltige Entwicklung', 'Politische Systeme', 'Wirtschaftstheorien',\n      'Kulturelle Identität', 'Bildung der Zukunft', 'Umwelt und Gesellschaft', 'Medien und Demokratie', 'Internationale Beziehungen'\n    ],\n    C1: [\n      'Künstliche Intelligenz und Gesellschaft', 'Postmoderne Philosophie', 'Komplexe Literaturanalyse', 'Gesellschaftskritik', 'Abstrakte Denkmodelle',\n      'Wissenschaftstheorie', 'Diskursanalyse', 'Kulturelle Hegemonie', 'Epistemologie', 'Hermeneutik',\n      'Dekonstruktivismus', 'Phänomenologie', 'Existenzialismus', 'Strukturalismus', 'Postkolonialismus',\n      'Kritische Theorie', 'Semiotik', 'Psychoanalyse', 'Sozialkonstruktivismus', 'Interdisziplinarität'\n    ]\n  }\n\n  const levelCategories = categories[level as keyof typeof categories] || categories.A1\n  const levelDifficulties = difficulties[level as keyof typeof difficulties] || difficulties.A1\n  const levelReadingTimes = readingTimes[level as keyof typeof readingTimes] || readingTimes.A1\n  const levelTitles = sampleTitles[level as keyof typeof sampleTitles] || sampleTitles.A1\n\n  for (let i = 0; i < count; i++) {\n    const categoryIndex = i % levelCategories.length\n    const difficultyIndex = i % levelDifficulties.length\n    const timeIndex = i % levelReadingTimes.length\n    const titleIndex = i % levelTitles.length\n    \n    const status = i < count * 0.3 ? 'completed' : i < count * 0.5 ? 'inProgress' : 'notStarted'\n    \n    texts.push({\n      id: i + 1,\n      title: `${levelTitles[titleIndex]} ${Math.floor(i / levelTitles.length) > 0 ? `(${Math.floor(i / levelTitles.length) + 1})` : ''}`,\n      summary: `Ein interessanter Text über ${levelCategories[categoryIndex]} für ${level}-Niveau`,\n      content: `\n        <h3>${levelTitles[titleIndex]}</h3>\n        <p>Dies ist ein Beispieltext für das ${level}-Niveau zum Thema ${levelCategories[categoryIndex]}. Der Text ist speziell für Deutschlernende auf diesem Niveau konzipiert.</p>\n        <p>In diesem Text lernen Sie wichtige Vokabeln und Strukturen, die für das ${level}-Niveau relevant sind. Die Inhalte sind authentisch und praxisnah gestaltet.</p>\n        <p>Jeder Text enthält verschiedene grammatische Strukturen und einen angemessenen Wortschatz für Ihr Sprachniveau. So können Sie Ihr Leseverständnis systematisch verbessern.</p>\n        <p>Die Texte behandeln verschiedene Themen aus dem Alltag, der Kultur, der Gesellschaft und anderen wichtigen Bereichen. Dies hilft Ihnen, ein breites Spektrum an Vokabular zu entwickeln.</p>\n        <p>Nutzen Sie diese Texte regelmäßig, um Ihre Deutschkenntnisse zu verbessern und sich auf Prüfungen vorzubereiten.</p>\n      `,\n      difficulty: levelDifficulties[difficultyIndex] as 'easy' | 'medium' | 'hard' | 'very hard',\n      readingTime: levelReadingTimes[timeIndex],\n      category: levelCategories[categoryIndex],\n      status: status as 'completed' | 'inProgress' | 'notStarted',\n      questions: i % 3 === 0 ? [\n        {\n          id: 1,\n          question: `Was ist das Hauptthema dieses Textes über ${levelCategories[categoryIndex]}?`,\n          options: [\n            `Grundlagen von ${levelCategories[categoryIndex]}`,\n            `Geschichte von ${levelCategories[categoryIndex]}`,\n            `Zukunft von ${levelCategories[categoryIndex]}`,\n            `Probleme mit ${levelCategories[categoryIndex]}`\n          ],\n          correctAnswer: 0\n        },\n        {\n          id: 2,\n          question: `Für welches Sprachniveau ist dieser Text geeignet?`,\n          options: ['A1', 'A2', 'B1', level],\n          correctAnswer: 3\n        }\n      ] : undefined\n    })\n  }\n\n  return texts\n}\n\nconst readingTexts = {\n  A1: generateTexts('A1', 120),\n  A2: generateTexts('A2', 110),\n  B1: generateTexts('B1', 105),\n  B2: generateTexts('B2', 108),\n  C1: generateTexts('C1', 115)\n}\n\nexport default function Reading({ selectedLevel, language }: ReadingProps) {\n  const t = translations\n  const texts = readingTexts[selectedLevel as keyof typeof readingTexts] || []\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedText, setSelectedText] = useState<number | null>(null)\n  const [showQuestions, setShowQuestions] = useState(false)\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800'\n      case 'inProgress':\n        return 'bg-blue-100 text-blue-800'\n      case 'notStarted':\n        return 'bg-gray-100 text-gray-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.completed\n      case 'inProgress':\n        return t.inProgress\n      case 'notStarted':\n        return t.notStarted\n      default:\n        return t.notStarted\n    }\n  }\n\n  const getButtonText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.reviewText\n      case 'inProgress':\n        return t.continueReading\n      case 'notStarted':\n        return t.readText\n      default:\n        return t.readText\n    }\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy':\n        return 'bg-green-100 text-green-800'\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'hard':\n        return 'bg-orange-100 text-orange-800'\n      case 'very hard':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const filteredTexts = texts.filter(text =>\n    text.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    text.category.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const completedTexts = texts.filter(t => t.status === 'completed').length\n  const inProgressTexts = texts.filter(t => t.status === 'inProgress').length\n  const totalReadingTime = texts.reduce((sum, text) => sum + text.readingTime, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> Niveau\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{texts.length}</span> {t.texts}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{completedTexts}</span> {t.completed}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{Math.round((completedTexts/texts.length) * 100)}%</span> abgeschlossen\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder={t.search}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\n              🔍\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Reading Texts */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {filteredTexts.slice(0, 12).map((text) => (\n          <Card key={text.id} className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n            <CardHeader>\n              <div className=\"flex justify-between items-start mb-2\">\n                <CardTitle className=\"text-lg\">{text.title}</CardTitle>\n                <Badge className={getStatusColor(text.status)}>\n                  {getStatusText(text.status)}\n                </Badge>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">{text.summary}</p>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  <Badge className={getDifficultyColor(text.difficulty)}>\n                    {t.difficulty}: {text.difficulty}\n                  </Badge>\n                  <Badge variant=\"outline\">\n                    📖 {text.category}\n                  </Badge>\n                  <Badge variant=\"outline\">\n                    ⏱️ {text.readingTime} {t.minutes}\n                  </Badge>\n                </div>\n\n                {text.status === 'inProgress' && (\n                  <div>\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <span className=\"text-sm font-medium\">Fortschritt</span>\n                      <span className=\"text-sm text-muted-foreground\">65%</span>\n                    </div>\n                    <Progress value={65} />\n                  </div>\n                )}\n\n                <Button \n                  className=\"w-full\"\n                  variant={text.status === 'completed' ? 'outline' : 'default'}\n                  onClick={() => setSelectedText(text.id)}\n                >\n                  {getButtonText(text.status)}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Show More Button */}\n      {filteredTexts.length > 12 && (\n        <div className=\"text-center\">\n          <Button variant=\"outline\" size=\"lg\">\n            Weitere {filteredTexts.length - 12} Texte anzeigen\n          </Button>\n        </div>\n      )}\n\n      {/* Text Reader Modal */}\n      {selectedText && (\n        <Card className=\"mt-6\">\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <CardTitle>\n                {texts.find(t => t.id === selectedText)?.title}\n              </CardTitle>\n              <div className=\"flex space-x-2\">\n                {texts.find(t => t.id === selectedText)?.questions && (\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\"\n                    onClick={() => setShowQuestions(!showQuestions)}\n                  >\n                    ❓ {showQuestions ? t.hideQuestions : t.showQuestions}\n                  </Button>\n                )}\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setSelectedText(null)}\n                >\n                  {t.close}\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div \n              className=\"prose prose-lg max-w-none\"\n              dangerouslySetInnerHTML={{ \n                __html: texts.find(t => t.id === selectedText)?.content || '' \n              }}\n            />\n\n            {/* Questions Section */}\n            {showQuestions && texts.find(t => t.id === selectedText)?.questions && (\n              <div className=\"mt-6 p-4 bg-yellow-50 rounded-lg border-l-4 border-yellow-400\">\n                <h4 className=\"font-semibold mb-4\">{t.questions}:</h4>\n                <div className=\"space-y-4\">\n                  {texts.find(t => t.id === selectedText)?.questions?.map((question, index) => (\n                    <div key={question.id} className=\"p-3 bg-white rounded border\">\n                      <p className=\"font-medium mb-2\">{index + 1}. {question.question}</p>\n                      <div className=\"space-y-1\">\n                        {question.options.map((option, optionIndex) => (\n                          <div key={optionIndex} className=\"flex items-center space-x-2\">\n                            <input \n                              type=\"radio\" \n                              name={`question-${question.id}`} \n                              id={`q${question.id}-${optionIndex}`}\n                              className=\"text-blue-600\"\n                            />\n                            <label \n                              htmlFor={`q${question.id}-${optionIndex}`}\n                              className=\"text-sm cursor-pointer\"\n                            >\n                              {String.fromCharCode(65 + optionIndex)}) {option}\n                            </label>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Statistics */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Lese-Statistiken</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">{completedTexts}</div>\n              <div className=\"text-sm text-green-600\">{t.completed}</div>\n            </div>\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{inProgressTexts}</div>\n              <div className=\"text-sm text-blue-600\">{t.inProgress}</div>\n            </div>\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-gray-600\">\n                {texts.length - completedTexts - inProgressTexts}\n              </div>\n              <div className=\"text-sm text-gray-600\">{t.notStarted}</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">{totalReadingTime}</div>\n              <div className=\"text-sm text-purple-600\">Gesamt {t.minutes}</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5328, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction RadioGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {\n  return (\n    <RadioGroupPrimitive.Root\n      data-slot=\"radio-group\"\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction RadioGroupItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(\n        \"border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator\n        data-slot=\"radio-group-indicator\"\n        className=\"relative flex items-center justify-center\"\n      >\n        <CircleIcon className=\"fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n}\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0XACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAC5B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,6MAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI9B;MArBS","debugId":null}},
    {"offset": {"line": 5393, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 5427, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/ExercisesNew.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Progress } from '@/components/ui/progress'\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\nimport { Label } from '@/components/ui/label'\n\ninterface ExercisesProps {\n  selectedLevel: string\n  language: string\n}\n\ninterface Exercise {\n  id: number\n  title: string\n  description: string\n  type: 'multiple-choice' | 'fill-blank' | 'drag-drop' | 'matching' | 'translation'\n  difficulty: 'easy' | 'medium' | 'hard' | 'very hard'\n  category: string\n  status: 'completed' | 'inProgress' | 'notStarted'\n  questions: Question[]\n  points: number\n  timeLimit?: number\n}\n\ninterface Question {\n  id: number\n  question: string\n  options?: string[]\n  correctAnswer: string | number\n  explanation?: string\n  blanks?: string[]\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  title: 'Übungen - Deutsche Übungen',\n  subtitle: 'Üben und festigen Sie Ihr Deutsch mit interaktiven Übungen',\n  search: 'Übungen suchen...',\n  categories: 'Kategorien',\n  exercises: 'Übungen',\n  completed: 'Abgeschlossen',\n  inProgress: 'In Bearbeitung',\n  notStarted: 'Nicht begonnen',\n  startExercise: 'Übung starten',\n  continueExercise: 'Fortsetzen',\n  reviewExercise: 'Wiederholen',\n  difficulty: 'Schwierigkeit',\n  points: 'Punkte',\n  timeLimit: 'Zeitlimit',\n  minutes: 'Minuten',\n  category: 'Kategorie',\n  close: 'Schließen',\n  submit: 'Abschicken',\n  nextQuestion: 'Nächste Frage',\n  previousQuestion: 'Vorherige Frage',\n  showResult: 'Ergebnis anzeigen',\n  correct: 'Richtig',\n  incorrect: 'Falsch',\n  score: 'Punktzahl',\n  explanation: 'Erklärung'\n}\n\nconst exercises = {\n  A1: [\n    {\n      id: 1,\n      title: 'Artikel üben (der, die, das)',\n      description: 'Wählen Sie den richtigen Artikel für jedes Substantiv',\n      type: 'multiple-choice',\n      difficulty: 'easy',\n      category: 'Grammatik',\n      status: 'completed',\n      points: 10,\n      timeLimit: 5,\n      questions: [\n        {\n          id: 1,\n          question: '__ Haus ist groß.',\n          options: ['der', 'die', 'das'],\n          correctAnswer: 2,\n          explanation: '\"Haus\" ist neutrum, deshalb verwendet man \"das\".'\n        },\n        {\n          id: 2,\n          question: '__ Frau ist nett.',\n          options: ['der', 'die', 'das'],\n          correctAnswer: 1,\n          explanation: '\"Frau\" ist feminin, deshalb verwendet man \"die\".'\n        },\n        {\n          id: 3,\n          question: '__ Mann arbeitet.',\n          options: ['der', 'die', 'das'],\n          correctAnswer: 0,\n          explanation: '\"Mann\" ist maskulin, deshalb verwendet man \"der\".'\n        },\n        {\n          id: 4,\n          question: '__ Kind spielt.',\n          options: ['der', 'die', 'das'],\n          correctAnswer: 2,\n          explanation: '\"Kind\" ist neutrum, deshalb verwendet man \"das\".'\n        },\n        {\n          id: 5,\n          question: '__ Katze schläft.',\n          options: ['der', 'die', 'das'],\n          correctAnswer: 1,\n          explanation: '\"Katze\" ist feminin, deshalb verwendet man \"die\".'\n        }\n      ]\n    },\n    {\n      id: 2,\n      title: 'Verben konjugieren - Präsens',\n      description: 'Konjugieren Sie die Verben im Präsens',\n      type: 'fill-blank',\n      difficulty: 'easy',\n      category: 'Grammatik',\n      status: 'inProgress',\n      points: 15,\n      questions: [\n        {\n          id: 1,\n          question: 'Ich _____ Deutsch. (lernen)',\n          correctAnswer: 'lerne',\n          explanation: 'Bei \"ich\" endet das Verb auf -e: ich lerne.'\n        },\n        {\n          id: 2,\n          question: 'Du _____ schnell. (laufen)',\n          correctAnswer: 'läufst',\n          explanation: 'Bei \"du\" endet das Verb auf -st und der Stammvokal ändert sich: du läufst.'\n        },\n        {\n          id: 3,\n          question: 'Er _____ ein Buch. (lesen)',\n          correctAnswer: 'liest',\n          explanation: 'Bei \"er\" endet das Verb auf -t und der Stammvokal ändert sich: er liest.'\n        },\n        {\n          id: 4,\n          question: 'Wir _____ Musik. (hören)',\n          correctAnswer: 'hören',\n          explanation: 'Bei \"wir\" bleibt das Verb unverändert: wir hören.'\n        },\n        {\n          id: 5,\n          question: 'Sie _____ Kaffee. (trinken)',\n          correctAnswer: 'trinken',\n          explanation: 'Bei \"sie\" (Plural) bleibt das Verb unverändert: sie trinken.'\n        }\n      ]\n    },\n    {\n      id: 3,\n      title: 'Zahlen von 1-20',\n      description: 'Übersetzen Sie die Zahlen ins Deutsche',\n      type: 'translation',\n      difficulty: 'easy',\n      category: 'Wortschatz',\n      status: 'notStarted',\n      points: 8,\n      questions: [\n        {\n          id: 1,\n          question: 'Wie heißt \"5\" auf Deutsch?',\n          correctAnswer: 'fünf',\n          explanation: 'Die Zahl 5 heißt auf Deutsch \"fünf\".'\n        },\n        {\n          id: 2,\n          question: 'Wie heißt \"12\" auf Deutsch?',\n          correctAnswer: 'zwölf',\n          explanation: 'Die Zahl 12 heißt auf Deutsch \"zwölf\".'\n        },\n        {\n          id: 3,\n          question: 'Wie heißt \"17\" auf Deutsch?',\n          correctAnswer: 'siebzehn',\n          explanation: 'Die Zahl 17 heißt auf Deutsch \"siebzehn\".'\n        }\n      ]\n    },\n    {\n      id: 4,\n      title: 'Farben und Adjektive',\n      description: 'Wählen Sie die richtige Farbe oder das richtige Adjektiv',\n      type: 'multiple-choice',\n      difficulty: 'easy',\n      category: 'Wortschatz',\n      status: 'notStarted',\n      points: 12,\n      questions: [\n        {\n          id: 1,\n          question: 'Die Sonne ist ____.',\n          options: ['blau', 'gelb', 'grün', 'schwarz'],\n          correctAnswer: 1,\n          explanation: 'Die Sonne ist gelb.'\n        },\n        {\n          id: 2,\n          question: 'Das Gras ist ____.',\n          options: ['rot', 'weiß', 'grün', 'braun'],\n          correctAnswer: 2,\n          explanation: 'Das Gras ist grün.'\n        }\n      ]\n    },\n    {\n      id: 5,\n      title: 'Familie - Wortschatz',\n      description: 'Ordnen Sie die Familienmitglieder zu',\n      type: 'matching',\n      difficulty: 'easy',\n      category: 'Wortschatz',\n      status: 'notStarted',\n      points: 10,\n      questions: [\n        {\n          id: 1,\n          question: 'Verbinden Sie die deutschen Wörter mit den türkischen Übersetzungen',\n          correctAnswer: 'matching',\n          explanation: 'Lernen Sie die Familienmitglieder auf Deutsch.'\n        }\n      ]\n    }\n  ] as Exercise[],\n  A2: [\n    {\n      id: 6,\n      title: 'Perfekt bilden',\n      description: 'Bilden Sie das Perfekt mit haben oder sein',\n      type: 'multiple-choice',\n      difficulty: 'medium',\n      category: 'Grammatik',\n      status: 'completed',\n      points: 20,\n      questions: [\n        {\n          id: 1,\n          question: 'Ich _____ nach Hause gegangen.',\n          options: ['habe', 'bin', 'hatte', 'war'],\n          correctAnswer: 1,\n          explanation: 'Bewegungsverben bilden das Perfekt mit \"sein\": ich bin gegangen.'\n        },\n        {\n          id: 2,\n          question: 'Er _____ ein Buch gelesen.',\n          options: ['ist', 'hat', 'hatte', 'war'],\n          correctAnswer: 1,\n          explanation: 'Die meisten Verben bilden das Perfekt mit \"haben\": er hat gelesen.'\n        }\n      ]\n    },\n    {\n      id: 7,\n      title: 'Dativ oder Akkusativ?',\n      description: 'Wählen Sie den richtigen Fall',\n      type: 'multiple-choice',\n      difficulty: 'medium',\n      category: 'Grammatik',\n      status: 'inProgress',\n      points: 25,\n      questions: [\n        {\n          id: 1,\n          question: 'Ich gebe _____ Mann das Buch.',\n          options: ['der', 'den', 'dem', 'des'],\n          correctAnswer: 2,\n          explanation: 'Nach \"geben\" steht das indirekte Objekt im Dativ: dem Mann.'\n        },\n        {\n          id: 2,\n          question: 'Ich sehe _____ Frau.',\n          options: ['der', 'die', 'den', 'dem'],\n          correctAnswer: 1,\n          explanation: 'Nach \"sehen\" steht das direkte Objekt im Akkusativ: die Frau (feminin bleibt gleich).'\n        }\n      ]\n    },\n    {\n      id: 8,\n      title: 'Modalverben',\n      description: 'Setzen Sie das richtige Modalverb ein',\n      type: 'fill-blank',\n      difficulty: 'medium',\n      category: 'Grammatik',\n      status: 'notStarted',\n      points: 18,\n      questions: [\n        {\n          id: 1,\n          question: 'Ich _____ Deutsch sprechen. (können)',\n          correctAnswer: 'kann',\n          explanation: 'können: ich kann, du kannst, er kann...'\n        },\n        {\n          id: 2,\n          question: 'Du _____ pünktlich sein. (müssen)',\n          correctAnswer: 'musst',\n          explanation: 'müssen: ich muss, du musst, er muss...'\n        }\n      ]\n    }\n  ] as Exercise[],\n  B1: [\n    {\n      id: 9,\n      title: 'Konjunktiv II',\n      description: 'Bilden Sie höfliche Bitten mit Konjunktiv II',\n      type: 'fill-blank',\n      difficulty: 'hard',\n      category: 'Grammatik',\n      status: 'inProgress',\n      points: 30,\n      questions: [\n        {\n          id: 1,\n          question: '_____ Sie mir bitte helfen? (können)',\n          correctAnswer: 'Könnten',\n          explanation: 'Höfliche Bitte mit Konjunktiv II: Könnten Sie...?'\n        },\n        {\n          id: 2,\n          question: 'Wenn ich Zeit _____, würde ich kommen. (haben)',\n          correctAnswer: 'hätte',\n          explanation: 'Irreale Bedingung: Wenn ich Zeit hätte...'\n        }\n      ]\n    },\n    {\n      id: 10,\n      title: 'Relativsätze',\n      description: 'Ergänzen Sie die Relativpronomen',\n      type: 'multiple-choice',\n      difficulty: 'hard',\n      category: 'Grammatik',\n      status: 'notStarted',\n      points: 35,\n      questions: [\n        {\n          id: 1,\n          question: 'Der Mann, _____ dort steht, ist mein Vater.',\n          options: ['der', 'den', 'dem', 'dessen'],\n          correctAnswer: 0,\n          explanation: 'Relativpronomen im Nominativ maskulin: der'\n        }\n      ]\n    }\n  ] as Exercise[],\n  B2: [\n    {\n      id: 11,\n      title: 'Partizipien als Adjektive',\n      description: 'Verwenden Sie Partizipien als Adjektive',\n      type: 'fill-blank',\n      difficulty: 'hard',\n      category: 'Grammatik',\n      status: 'notStarted',\n      points: 40,\n      questions: [\n        {\n          id: 1,\n          question: 'Das _____ Buch liegt auf dem Tisch. (lesen)',\n          correctAnswer: 'gelesene',\n          explanation: 'Partizip II als Adjektiv: das gelesene Buch'\n        }\n      ]\n    }\n  ] as Exercise[],\n  C1: [\n    {\n      id: 12,\n      title: 'Erweiterte Infinitivkonstruktionen',\n      description: 'Bilden Sie komplexe Infinitivsätze',\n      type: 'fill-blank',\n      difficulty: 'very hard',\n      category: 'Grammatik',\n      status: 'notStarted',\n      points: 50,\n      questions: [\n        {\n          id: 1,\n          question: 'Er ging weg, _____ etwas zu sagen. (ohne)',\n          correctAnswer: 'ohne',\n          explanation: 'Infinitivkonstruktion mit \"ohne...zu\"'\n        }\n      ]\n    }\n  ] as Exercise[]\n}\n\nexport default function Exercises({ selectedLevel, language }: ExercisesProps) {\n  const t = translations\n  const exerciseList = exercises[selectedLevel as keyof typeof exercises] || []\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedExercise, setSelectedExercise] = useState<number | null>(null)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [userAnswers, setUserAnswers] = useState<{[key: number]: string | number}>({})\n  const [showResults, setShowResults] = useState(false)\n  const [exerciseCompleted, setExerciseCompleted] = useState(false)\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800'\n      case 'inProgress':\n        return 'bg-blue-100 text-blue-800'\n      case 'notStarted':\n        return 'bg-gray-100 text-gray-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.completed\n      case 'inProgress':\n        return t.inProgress\n      case 'notStarted':\n        return t.notStarted\n      default:\n        return t.notStarted\n    }\n  }\n\n  const getButtonText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return t.reviewExercise\n      case 'inProgress':\n        return t.continueExercise\n      case 'notStarted':\n        return t.startExercise\n      default:\n        return t.startExercise\n    }\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy':\n        return 'bg-green-100 text-green-800'\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'hard':\n        return 'bg-orange-100 text-orange-800'\n      case 'very hard':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const handleAnswerChange = (questionId: number, answer: string | number) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }))\n  }\n\n  const calculateScore = () => {\n    const exercise = exerciseList.find(ex => ex.id === selectedExercise)\n    if (!exercise) return 0\n\n    let correct = 0\n    exercise.questions.forEach(question => {\n      const userAnswer = userAnswers[question.id]\n      if (userAnswer === question.correctAnswer) {\n        correct++\n      }\n    })\n\n    return Math.round((correct / exercise.questions.length) * exercise.points)\n  }\n\n  const filteredExercises = exerciseList.filter(exercise =>\n    exercise.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    exercise.category.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const currentExercise = exerciseList.find(ex => ex.id === selectedExercise)\n  const currentQuestionData = currentExercise?.questions[currentQuestion]\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-green-600 to-teal-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> Niveau\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{exerciseList.length}</span> {t.exercises}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{exerciseList.filter(ex => ex.status === 'completed').length}</span> {t.completed}\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder={t.search}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\n              🔍\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {!selectedExercise ? (\n        <>\n          {/* Exercise List */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredExercises.map((exercise) => (\n              <Card key={exercise.id} className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                <CardHeader>\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <CardTitle className=\"text-lg\">{exercise.title}</CardTitle>\n                    <Badge className={getStatusColor(exercise.status)}>\n                      {getStatusText(exercise.status)}\n                    </Badge>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">{exercise.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex flex-wrap gap-2\">\n                      <Badge className={getDifficultyColor(exercise.difficulty)}>\n                        {t.difficulty}: {exercise.difficulty}\n                      </Badge>\n                      <Badge variant=\"outline\">\n                        📚 {exercise.category}\n                      </Badge>\n                      <Badge variant=\"outline\">\n                        ⭐ {exercise.points} {t.points}\n                      </Badge>\n                      {exercise.timeLimit && (\n                        <Badge variant=\"outline\">\n                          ⏱️ {exercise.timeLimit} {t.minutes}\n                        </Badge>\n                      )}\n                    </div>\n\n                    <div className=\"text-sm text-muted-foreground\">\n                      {exercise.questions.length} Fragen\n                    </div>\n\n                    {exercise.status === 'inProgress' && (\n                      <div>\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium\">Fortschritt</span>\n                          <span className=\"text-sm text-muted-foreground\">60%</span>\n                        </div>\n                        <Progress value={60} />\n                      </div>\n                    )}\n\n                    <Button \n                      className=\"w-full\"\n                      variant={exercise.status === 'completed' ? 'outline' : 'default'}\n                      onClick={() => {\n                        setSelectedExercise(exercise.id)\n                        setCurrentQuestion(0)\n                        setUserAnswers({})\n                        setShowResults(false)\n                        setExerciseCompleted(false)\n                      }}\n                    >\n                      {getButtonText(exercise.status)}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Statistics */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Übungs-Statistiken</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {exerciseList.filter(ex => ex.status === 'completed').length}\n                  </div>\n                  <div className=\"text-sm text-green-600\">{t.completed}</div>\n                </div>\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {exerciseList.filter(ex => ex.status === 'inProgress').length}\n                  </div>\n                  <div className=\"text-sm text-blue-600\">{t.inProgress}</div>\n                </div>\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-gray-600\">\n                    {exerciseList.filter(ex => ex.status === 'notStarted').length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">{t.notStarted}</div>\n                </div>\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {exerciseList.reduce((sum, ex) => sum + ex.points, 0)}\n                  </div>\n                  <div className=\"text-sm text-purple-600\">Gesamt {t.points}</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </>\n      ) : (\n        /* Exercise Interface */\n        <Card>\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <CardTitle>{currentExercise?.title}</CardTitle>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  Frage {currentQuestion + 1} von {currentExercise?.questions.length}\n                </p>\n              </div>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setSelectedExercise(null)}\n              >\n                {t.close}\n              </Button>\n            </div>\n            <Progress \n              value={((currentQuestion + 1) / (currentExercise?.questions.length || 1)) * 100} \n              className=\"mt-4\"\n            />\n          </CardHeader>\n          <CardContent>\n            {!showResults && currentQuestionData ? (\n              <div className=\"space-y-6\">\n                <div className=\"text-lg font-medium\">\n                  {currentQuestionData.question}\n                </div>\n\n                {/* Multiple Choice */}\n                {currentExercise?.type === 'multiple-choice' && currentQuestionData.options && (\n                  <RadioGroup\n                    value={userAnswers[currentQuestionData.id]?.toString() || ''}\n                    onValueChange={(value) => handleAnswerChange(currentQuestionData.id, parseInt(value))}\n                  >\n                    {currentQuestionData.options.map((option, index) => (\n                      <div key={index} className=\"flex items-center space-x-2\">\n                        <RadioGroupItem value={index.toString()} id={`option-${index}`} />\n                        <Label htmlFor={`option-${index}`} className=\"cursor-pointer\">\n                          {option}\n                        </Label>\n                      </div>\n                    ))}\n                  </RadioGroup>\n                )}\n\n                {/* Fill in the Blank */}\n                {currentExercise?.type === 'fill-blank' && (\n                  <Input\n                    placeholder=\"Ihre Antwort...\"\n                    value={userAnswers[currentQuestionData.id]?.toString() || ''}\n                    onChange={(e) => handleAnswerChange(currentQuestionData.id, e.target.value)}\n                    className=\"text-lg\"\n                  />\n                )}\n\n                {/* Navigation Buttons */}\n                <div className=\"flex justify-between items-center\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setCurrentQuestion(Math.max(0, currentQuestion - 1))}\n                    disabled={currentQuestion === 0}\n                  >\n                    {t.previousQuestion}\n                  </Button>\n\n                  {currentQuestion < (currentExercise?.questions.length || 1) - 1 ? (\n                    <Button\n                      onClick={() => setCurrentQuestion(currentQuestion + 1)}\n                      disabled={!userAnswers[currentQuestionData.id]}\n                    >\n                      {t.nextQuestion}\n                    </Button>\n                  ) : (\n                    <Button\n                      onClick={() => setShowResults(true)}\n                      disabled={!userAnswers[currentQuestionData.id]}\n                    >\n                      {t.showResult}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            ) : (\n              /* Results */\n              <div className=\"space-y-6\">\n                <div className=\"text-center\">\n                  <h3 className=\"text-2xl font-bold mb-2\">Ergebnis</h3>\n                  <div className=\"text-4xl font-bold text-blue-600 mb-2\">\n                    {calculateScore()}/{currentExercise?.points} {t.points}\n                  </div>\n                  <div className=\"text-lg text-muted-foreground\">\n                    {Math.round((calculateScore() / (currentExercise?.points || 1)) * 100)}% richtig\n                  </div>\n                </div>\n\n                {/* Answer Review */}\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Antworten im Detail:</h4>\n                  {currentExercise?.questions.map((question, index) => {\n                    const userAnswer = userAnswers[question.id]\n                    const isCorrect = userAnswer === question.correctAnswer\n                    \n                    return (\n                      <div key={question.id} className={`p-4 rounded-lg border-l-4 ${\n                        isCorrect ? 'bg-green-50 border-green-400' : 'bg-red-50 border-red-400'\n                      }`}>\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <span className=\"font-medium\">Frage {index + 1}: {question.question}</span>\n                          <Badge className={isCorrect ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}>\n                            {isCorrect ? t.correct : t.incorrect}\n                          </Badge>\n                        </div>\n                        \n                        {currentExercise.type === 'multiple-choice' && question.options && (\n                          <div className=\"text-sm\">\n                            <p>Ihre Antwort: {question.options[userAnswer as number] || 'Keine Antwort'}</p>\n                            <p>Richtige Antwort: {question.options[question.correctAnswer as number]}</p>\n                          </div>\n                        )}\n                        \n                        {currentExercise.type === 'fill-blank' && (\n                          <div className=\"text-sm\">\n                            <p>Ihre Antwort: {userAnswer || 'Keine Antwort'}</p>\n                            <p>Richtige Antwort: {question.correctAnswer}</p>\n                          </div>\n                        )}\n                        \n                        {question.explanation && (\n                          <div className=\"mt-2 text-sm text-blue-600\">\n                            <strong>{t.explanation}:</strong> {question.explanation}\n                          </div>\n                        )}\n                      </div>\n                    )\n                  })}\n                </div>\n\n                <div className=\"flex justify-center space-x-4\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => {\n                      setCurrentQuestion(0)\n                      setUserAnswers({})\n                      setShowResults(false)\n                    }}\n                  >\n                    Nochmal üben\n                  </Button>\n                  <Button onClick={() => setSelectedExercise(null)}>\n                    Zurück zur Übersicht\n                  </Button>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6831, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/Progress.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Progress as ProgressBar } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\n\ninterface ProgressProps {\n  selectedLevel: string\n  language: string\n}\n\nconst translations = {\n  tr: {\n    title: 'Fortschritt - İlerleme Takibi',\n    subtitle: 'Öğrenme yolculuğunuzdaki ilerlemenizi takip edin',\n    overallProgress: 'Genel İlerleme',\n    dailyGoal: 'Günlük Hedef',\n    weeklyGoal: 'Haftalık Hedef',\n    monthlyGoal: 'Aylık Hedef',\n    streak: 'Günlük Seri',\n    totalWords: 'Toplam Kelime',\n    completedLessons: 'Tamamlanan Dersler',\n    studyTime: 'Çalışma Süresi',\n    achievements: 'Başarılar',\n    recentActivity: 'Son Aktiviteler',\n    skillBreakdown: 'Beceri Dağılımı',\n    vocabulary: 'Kelime Bilgisi',\n    grammar: 'Grammatik',\n    reading: 'Okuma',\n    exercises: 'Alıştırmalar',\n    listening: 'Dinleme',\n    speaking: 'Konuşma',\n    days: 'gün',\n    hours: 'saat',\n    minutes: 'dakika',\n    words: 'kelime',\n    lessons: 'ders',\n    level: 'Seviye',\n    nextLevel: 'Sonraki Seviye',\n    levelProgress: 'Seviye İlerlemesi'\n  },\n  en: {\n    title: 'Progress - Learning Progress',\n    subtitle: 'Track your progress on your learning journey',\n    overallProgress: 'Overall Progress',\n    dailyGoal: 'Daily Goal',\n    weeklyGoal: 'Weekly Goal',\n    monthlyGoal: 'Monthly Goal',\n    streak: 'Daily Streak',\n    totalWords: 'Total Words',\n    completedLessons: 'Completed Lessons',\n    studyTime: 'Study Time',\n    achievements: 'Achievements',\n    recentActivity: 'Recent Activity',\n    skillBreakdown: 'Skill Breakdown',\n    vocabulary: 'Vocabulary',\n    grammar: 'Grammar',\n    reading: 'Reading',\n    exercises: 'Exercises',\n    listening: 'Listening',\n    speaking: 'Speaking',\n    days: 'days',\n    hours: 'hours',\n    minutes: 'minutes',\n    words: 'words',\n    lessons: 'lessons',\n    level: 'Level',\n    nextLevel: 'Next Level',\n    levelProgress: 'Level Progress'\n  }\n}\n\nconst progressData = {\n  A1: {\n    overallProgress: 85,\n    dailyGoal: { current: 45, target: 60 },\n    weeklyGoal: { current: 280, target: 420 },\n    monthlyGoal: { current: 1200, target: 1800 },\n    streak: 12,\n    totalWords: 450,\n    completedLessons: 28,\n    studyTime: { hours: 45, minutes: 30 },\n    nextLevel: 'A2',\n    levelProgress: 85,\n    skills: {\n      vocabulary: 90,\n      grammar: 75,\n      reading: 85,\n      exercises: 80,\n      listening: 70,\n      speaking: 65\n    },\n    achievements: [\n      { id: 1, name: 'İlk Adım', description: 'İlk dersinizi tamamladınız', icon: '🎯', earned: true },\n      { id: 2, name: 'Kelime Ustası', description: '100 kelime öğrendiniz', icon: '📚', earned: true },\n      { id: 3, name: 'Seri Yapıcı', description: '7 gün üst üste çalıştınız', icon: '🔥', earned: true },\n      { id: 4, name: 'Okuma Meraklısı', description: '10 metin okudunuz', icon: '📖', earned: false }\n    ],\n    recentActivity: [\n      { date: '2024-01-15', activity: 'Artikel konusunu tamamladınız', type: 'grammar', points: 50 },\n      { date: '2024-01-15', activity: '25 yeni kelime öğrendiniz', type: 'vocabulary', points: 75 },\n      { date: '2024-01-14', activity: '\"Meine Familie\" metnini okudunuz', type: 'reading', points: 40 },\n      { date: '2024-01-14', activity: 'Präsens alıştırmasını tamamladınız', type: 'exercise', points: 60 }\n    ]\n  },\n  A2: {\n    overallProgress: 60,\n    dailyGoal: { current: 35, target: 60 },\n    weeklyGoal: { current: 200, target: 420 },\n    monthlyGoal: { current: 800, target: 1800 },\n    streak: 8,\n    totalWords: 680,\n    completedLessons: 35,\n    studyTime: { hours: 62, minutes: 15 },\n    nextLevel: 'B1',\n    levelProgress: 60,\n    skills: {\n      vocabulary: 70,\n      grammar: 55,\n      reading: 65,\n      exercises: 60,\n      listening: 50,\n      speaking: 45\n    },\n    achievements: [\n      { id: 1, name: 'A1 Mezunu', description: 'A1 seviyesini tamamladınız', icon: '🎓', earned: true },\n      { id: 2, name: 'Perfekt Ustası', description: 'Perfekt zamanını öğrendiniz', icon: '⏰', earned: true },\n      { id: 3, name: 'Seyahat Rehberi', description: 'Seyahat kelimelerini öğrendiniz', icon: '✈️', earned: false }\n    ],\n    recentActivity: [\n      { date: '2024-01-15', activity: 'Dativ konusunu çalıştınız', type: 'grammar', points: 45 },\n      { date: '2024-01-15', activity: 'Beruf kategorisindeki kelimeleri gözden geçirdiniz', type: 'vocabulary', points: 30 }\n    ]\n  },\n  B1: {\n    overallProgress: 40,\n    dailyGoal: { current: 25, target: 60 },\n    weeklyGoal: { current: 150, target: 420 },\n    monthlyGoal: { current: 600, target: 1800 },\n    streak: 5,\n    totalWords: 920,\n    completedLessons: 42,\n    studyTime: { hours: 78, minutes: 45 },\n    nextLevel: 'B2',\n    levelProgress: 40,\n    skills: {\n      vocabulary: 50,\n      grammar: 35,\n      reading: 45,\n      exercises: 40,\n      listening: 30,\n      speaking: 25\n    },\n    achievements: [\n      { id: 1, name: 'A2 Mezunu', description: 'A2 seviyesini tamamladınız', icon: '🎓', earned: true },\n      { id: 2, name: 'Orta Seviye', description: 'B1 seviyesine başladınız', icon: '📈', earned: true }\n    ],\n    recentActivity: [\n      { date: '2024-01-15', activity: 'Konjunktiv II konusuna başladınız', type: 'grammar', points: 30 }\n    ]\n  },\n  B2: {\n    overallProgress: 20,\n    dailyGoal: { current: 15, target: 60 },\n    weeklyGoal: { current: 80, target: 420 },\n    monthlyGoal: { current: 300, target: 1800 },\n    streak: 3,\n    totalWords: 1150,\n    completedLessons: 48,\n    studyTime: { hours: 95, minutes: 20 },\n    nextLevel: 'C1',\n    levelProgress: 20,\n    skills: {\n      vocabulary: 30,\n      grammar: 15,\n      reading: 25,\n      exercises: 20,\n      listening: 10,\n      speaking: 5\n    },\n    achievements: [\n      { id: 1, name: 'B1 Mezunu', description: 'B1 seviyesini tamamladınız', icon: '🎓', earned: true }\n    ],\n    recentActivity: [\n      { date: '2024-01-15', activity: 'Passiv konusuna başladınız', type: 'grammar', points: 25 }\n    ]\n  },\n  C1: {\n    overallProgress: 10,\n    dailyGoal: { current: 10, target: 60 },\n    weeklyGoal: { current: 50, target: 420 },\n    monthlyGoal: { current: 200, target: 1800 },\n    streak: 2,\n    totalWords: 1380,\n    completedLessons: 52,\n    studyTime: { hours: 112, minutes: 10 },\n    nextLevel: 'C2',\n    levelProgress: 10,\n    skills: {\n      vocabulary: 15,\n      grammar: 5,\n      reading: 10,\n      exercises: 8,\n      listening: 3,\n      speaking: 2\n    },\n    achievements: [\n      { id: 1, name: 'B2 Mezunu', description: 'B2 seviyesini tamamladınız', icon: '🎓', earned: true }\n    ],\n    recentActivity: [\n      { date: '2024-01-15', activity: 'Erweiterte Grammatik konusuna başladınız', type: 'grammar', points: 20 }\n    ]\n  }\n}\n\nexport default function Progress({ selectedLevel, language }: ProgressProps) {\n  const t = translations[language as keyof typeof translations]\n  const data = progressData[selectedLevel as keyof typeof progressData]\n\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'grammar': return '📚'\n      case 'vocabulary': return '📖'\n      case 'reading': return '📰'\n      case 'exercise': return '✏️'\n      case 'listening': return '🎧'\n      case 'speaking': return '🗣️'\n      default: return '📝'\n    }\n  }\n\n  const getSkillColor = (percentage: number) => {\n    if (percentage >= 80) return 'text-green-600'\n    if (percentage >= 60) return 'text-blue-600'\n    if (percentage >= 40) return 'text-yellow-600'\n    if (percentage >= 20) return 'text-orange-600'\n    return 'text-red-600'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> {t.level}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{data.overallProgress}%</span> tamamlandı\n          </div>\n        </div>\n      </div>\n\n      {/* Overall Progress */}\n      <Card>\n        <CardHeader>\n          <CardTitle>{t.overallProgress}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium\">{selectedLevel} {t.levelProgress}</span>\n                <span className=\"text-sm text-muted-foreground\">{data.levelProgress}%</span>\n              </div>\n              <ProgressBar value={data.levelProgress} className=\"h-3\" />\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                {t.nextLevel}: {data.nextLevel}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Goals */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">{t.dailyGoal}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>{data.dailyGoal.current} / {data.dailyGoal.target} {t.minutes}</span>\n                <span>{Math.round((data.dailyGoal.current / data.dailyGoal.target) * 100)}%</span>\n              </div>\n              <ProgressBar value={(data.dailyGoal.current / data.dailyGoal.target) * 100} />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">{t.weeklyGoal}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>{data.weeklyGoal.current} / {data.weeklyGoal.target} {t.minutes}</span>\n                <span>{Math.round((data.weeklyGoal.current / data.weeklyGoal.target) * 100)}%</span>\n              </div>\n              <ProgressBar value={(data.weeklyGoal.current / data.weeklyGoal.target) * 100} />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">{t.monthlyGoal}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>{data.monthlyGoal.current} / {data.monthlyGoal.target} {t.minutes}</span>\n                <span>{Math.round((data.monthlyGoal.current / data.monthlyGoal.target) * 100)}%</span>\n              </div>\n              <ProgressBar value={(data.monthlyGoal.current / data.monthlyGoal.target) * 100} />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl mb-2\">🔥</div>\n              <div className=\"text-2xl font-bold\">{data.streak}</div>\n              <div className=\"text-sm text-muted-foreground\">{t.streak}</div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl mb-2\">📚</div>\n              <div className=\"text-2xl font-bold\">{data.totalWords}</div>\n              <div className=\"text-sm text-muted-foreground\">{t.totalWords}</div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl mb-2\">✅</div>\n              <div className=\"text-2xl font-bold\">{data.completedLessons}</div>\n              <div className=\"text-sm text-muted-foreground\">{t.completedLessons}</div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl mb-2\">⏰</div>\n              <div className=\"text-2xl font-bold\">{data.studyTime.hours}s {data.studyTime.minutes}d</div>\n              <div className=\"text-sm text-muted-foreground\">{t.studyTime}</div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Skill Breakdown */}\n      <Card>\n        <CardHeader>\n          <CardTitle>{t.skillBreakdown}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {Object.entries(data.skills).map(([skill, percentage]) => (\n              <div key={skill} className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm font-medium\">\n                    {t[skill as keyof typeof t] || skill}\n                  </span>\n                  <span className={`text-sm font-bold ${getSkillColor(percentage)}`}>\n                    {percentage}%\n                  </span>\n                </div>\n                <ProgressBar value={percentage} />\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Achievements */}\n      <Card>\n        <CardHeader>\n          <CardTitle>{t.achievements}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {data.achievements.map((achievement) => (\n              <div \n                key={achievement.id}\n                className={`p-4 rounded-lg border-2 ${\n                  achievement.earned \n                    ? 'border-green-200 bg-green-50' \n                    : 'border-gray-200 bg-gray-50 opacity-60'\n                }`}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">{achievement.icon}</div>\n                  <h4 className=\"font-semibold mb-1\">{achievement.name}</h4>\n                  <p className=\"text-xs text-muted-foreground\">{achievement.description}</p>\n                  {achievement.earned && (\n                    <Badge className=\"mt-2 bg-green-100 text-green-800\">\n                      Kazanıldı ✓\n                    </Badge>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle>{t.recentActivity}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {data.recentActivity.map((activity, index) => (\n              <div key={index} className=\"flex items-center space-x-4 p-3 bg-muted/50 rounded-lg\">\n                <div className=\"text-2xl\">{getActivityIcon(activity.type)}</div>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium\">{activity.activity}</div>\n                  <div className=\"text-sm text-muted-foreground\">{activity.date}</div>\n                </div>\n                <Badge variant=\"outline\">\n                  +{activity.points} puan\n                </Badge>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8117, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8DACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,qKAAA,CAAA,WAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 8179, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 8255, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/Profile.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\n\ninterface ProfileProps {\n  language: string\n}\n\nconst translations = {\n  tr: {\n    title: 'Profil - Kullanıcı Bilgileri',\n    subtitle: 'Hesap bilgilerinizi yönetin ve öğrenme hedeflerinizi belirleyin',\n    personalInfo: 'Kişisel Bilgiler',\n    learningGoals: 'Öğrenme Hedefleri',\n    statistics: 'İstatistikler',\n    achievements: 'Başarılar',\n    settings: 'Ayarlar',\n    name: 'Ad Soyad',\n    email: 'E-posta',\n    joinDate: 'Katılım Tarihi',\n    currentLevel: 'Mevcut Seviye',\n    targetLevel: 'Hedef Seviye',\n    dailyGoal: 'Günlük Hedef',\n    weeklyGoal: 'Haftalık Hedef',\n    studyReminder: 'Çalışma Hatırlatıcısı',\n    save: 'Kaydet',\n    edit: 'Düzenle',\n    cancel: 'İptal',\n    totalStudyTime: 'Toplam Çalışma Süresi',\n    wordsLearned: 'Öğrenilen Kelimeler',\n    lessonsCompleted: 'Tamamlanan Dersler',\n    currentStreak: 'Mevcut Seri',\n    longestStreak: 'En Uzun Seri',\n    averageScore: 'Ortalama Puan',\n    minutes: 'dakika',\n    hours: 'saat',\n    days: 'gün',\n    words: 'kelime',\n    lessons: 'ders',\n    notifications: 'Bildirimler',\n    darkMode: 'Koyu Tema',\n    language: 'Dil',\n    privacy: 'Gizlilik',\n    deleteAccount: 'Hesabı Sil'\n  },\n  en: {\n    title: 'Profile - User Information',\n    subtitle: 'Manage your account information and set learning goals',\n    personalInfo: 'Personal Information',\n    learningGoals: 'Learning Goals',\n    statistics: 'Statistics',\n    achievements: 'Achievements',\n    settings: 'Settings',\n    name: 'Full Name',\n    email: 'Email',\n    joinDate: 'Join Date',\n    currentLevel: 'Current Level',\n    targetLevel: 'Target Level',\n    dailyGoal: 'Daily Goal',\n    weeklyGoal: 'Weekly Goal',\n    studyReminder: 'Study Reminder',\n    save: 'Save',\n    edit: 'Edit',\n    cancel: 'Cancel',\n    totalStudyTime: 'Total Study Time',\n    wordsLearned: 'Words Learned',\n    lessonsCompleted: 'Lessons Completed',\n    currentStreak: 'Current Streak',\n    longestStreak: 'Longest Streak',\n    averageScore: 'Average Score',\n    minutes: 'minutes',\n    hours: 'hours',\n    days: 'days',\n    words: 'words',\n    lessons: 'lessons',\n    notifications: 'Notifications',\n    darkMode: 'Dark Mode',\n    language: 'Language',\n    privacy: 'Privacy',\n    deleteAccount: 'Delete Account'\n  }\n}\n\nconst userProfile = {\n  name: 'Ahmet Yılmaz',\n  email: 'ahmet.yilmaz@email.com',\n  joinDate: '15 Ocak 2024',\n  avatar: '',\n  currentLevel: 'B1',\n  targetLevel: 'C1',\n  dailyGoal: 30,\n  weeklyGoal: 210,\n  studyReminder: '19:00',\n  statistics: {\n    totalStudyTime: { hours: 78, minutes: 45 },\n    wordsLearned: 920,\n    lessonsCompleted: 42,\n    currentStreak: 12,\n    longestStreak: 25,\n    averageScore: 78\n  },\n  achievements: [\n    { id: 1, name: 'İlk Adım', description: 'İlk dersinizi tamamladınız', icon: '🎯', date: '16 Ocak 2024' },\n    { id: 2, name: 'Kelime Ustası', description: '500 kelime öğrendiniz', icon: '📚', date: '25 Ocak 2024' },\n    { id: 3, name: 'Seri Yapıcı', description: '10 gün üst üste çalıştınız', icon: '🔥', date: '28 Ocak 2024' },\n    { id: 4, name: 'Grammatik Uzmanı', description: 'Tüm A1 grammatik konularını tamamladınız', icon: '📖', date: '02 Şubat 2024' },\n    { id: 5, name: 'Okuma Meraklısı', description: '20 metin okudunuz', icon: '📰', date: '05 Şubat 2024' },\n    { id: 6, name: 'Alıştırma Şampiyonu', description: '50 alıştırma tamamladınız', icon: '✏️', date: '08 Şubat 2024' }\n  ],\n  settings: {\n    notifications: true,\n    darkMode: false,\n    language: 'tr',\n    privacy: 'public'\n  }\n}\n\nexport default function Profile({ language }: ProfileProps) {\n  const t = translations[language as keyof typeof translations]\n  const [isEditing, setIsEditing] = useState(false)\n  const [profile, setProfile] = useState(userProfile)\n\n  const handleSave = () => {\n    setIsEditing(false)\n    // Burada API çağrısı yapılacak\n  }\n\n  const handleCancel = () => {\n    setIsEditing(false)\n    setProfile(userProfile) // Reset to original\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-teal-600 to-cyan-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n      </div>\n\n      {/* Profile Overview */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center space-x-6\">\n            <Avatar className=\"w-20 h-20\">\n              <AvatarImage src={profile.avatar} />\n              <AvatarFallback className=\"text-2xl\">\n                {profile.name.split(' ').map(n => n[0]).join('')}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1\">\n              <h3 className=\"text-2xl font-bold\">{profile.name}</h3>\n              <p className=\"text-muted-foreground\">{profile.email}</p>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <Badge variant=\"outline\">{profile.currentLevel} seviyesi</Badge>\n                <Badge variant=\"outline\">Hedef: {profile.targetLevel}</Badge>\n                <span className=\"text-sm text-muted-foreground\">\n                  {t.joinDate}: {profile.joinDate}\n                </span>\n              </div>\n            </div>\n            <Button \n              onClick={() => setIsEditing(!isEditing)}\n              variant={isEditing ? \"outline\" : \"default\"}\n            >\n              {isEditing ? t.cancel : t.edit}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Tabs defaultValue=\"info\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"info\">{t.personalInfo}</TabsTrigger>\n          <TabsTrigger value=\"goals\">{t.learningGoals}</TabsTrigger>\n          <TabsTrigger value=\"stats\">{t.statistics}</TabsTrigger>\n          <TabsTrigger value=\"achievements\">{t.achievements}</TabsTrigger>\n        </TabsList>\n\n        {/* Personal Information */}\n        <TabsContent value=\"info\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t.personalInfo}</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"name\">{t.name}</Label>\n                  <Input\n                    id=\"name\"\n                    value={profile.name}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">{t.email}</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={profile.email}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, email: e.target.value})}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"currentLevel\">{t.currentLevel}</Label>\n                  <Input\n                    id=\"currentLevel\"\n                    value={profile.currentLevel}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, currentLevel: e.target.value})}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"targetLevel\">{t.targetLevel}</Label>\n                  <Input\n                    id=\"targetLevel\"\n                    value={profile.targetLevel}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, targetLevel: e.target.value})}\n                  />\n                </div>\n              </div>\n              {isEditing && (\n                <div className=\"flex space-x-2\">\n                  <Button onClick={handleSave}>{t.save}</Button>\n                  <Button variant=\"outline\" onClick={handleCancel}>{t.cancel}</Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Learning Goals */}\n        <TabsContent value=\"goals\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t.learningGoals}</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"dailyGoal\">{t.dailyGoal} ({t.minutes})</Label>\n                  <Input\n                    id=\"dailyGoal\"\n                    type=\"number\"\n                    value={profile.dailyGoal}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, dailyGoal: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"weeklyGoal\">{t.weeklyGoal} ({t.minutes})</Label>\n                  <Input\n                    id=\"weeklyGoal\"\n                    type=\"number\"\n                    value={profile.weeklyGoal}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, weeklyGoal: parseInt(e.target.value)})}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"studyReminder\">{t.studyReminder}</Label>\n                  <Input\n                    id=\"studyReminder\"\n                    type=\"time\"\n                    value={profile.studyReminder}\n                    disabled={!isEditing}\n                    onChange={(e) => setProfile({...profile, studyReminder: e.target.value})}\n                  />\n                </div>\n              </div>\n              {isEditing && (\n                <div className=\"flex space-x-2\">\n                  <Button onClick={handleSave}>{t.save}</Button>\n                  <Button variant=\"outline\" onClick={handleCancel}>{t.cancel}</Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Statistics */}\n        <TabsContent value=\"stats\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">⏰</div>\n                  <div className=\"text-2xl font-bold\">\n                    {profile.statistics.totalStudyTime.hours}s {profile.statistics.totalStudyTime.minutes}d\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">{t.totalStudyTime}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">📚</div>\n                  <div className=\"text-2xl font-bold\">{profile.statistics.wordsLearned}</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.wordsLearned}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">✅</div>\n                  <div className=\"text-2xl font-bold\">{profile.statistics.lessonsCompleted}</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.lessonsCompleted}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🔥</div>\n                  <div className=\"text-2xl font-bold\">{profile.statistics.currentStreak}</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.currentStreak}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">🏆</div>\n                  <div className=\"text-2xl font-bold\">{profile.statistics.longestStreak}</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.longestStreak}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl mb-2\">📊</div>\n                  <div className=\"text-2xl font-bold\">{profile.statistics.averageScore}%</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.averageScore}</div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Achievements */}\n        <TabsContent value=\"achievements\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t.achievements}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {profile.achievements.map((achievement) => (\n                  <div \n                    key={achievement.id}\n                    className=\"p-4 rounded-lg border-2 border-green-200 bg-green-50\"\n                  >\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl mb-2\">{achievement.icon}</div>\n                      <h4 className=\"font-semibold mb-1\">{achievement.name}</h4>\n                      <p className=\"text-xs text-muted-foreground mb-2\">{achievement.description}</p>\n                      <Badge className=\"bg-green-100 text-green-800\">\n                        {achievement.date}\n                      </Badge>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9417, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/pages/FlashcardsNew.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Progress } from '@/components/ui/progress'\n\ninterface FlashcardsProps {\n  selectedLevel: string\n  language: string\n}\n\ninterface Flashcard {\n  id: number\n  front: string\n  back: string\n  category: string\n  difficulty: 'easy' | 'medium' | 'hard' | 'very hard'\n  status: 'new' | 'learning' | 'review' | 'mastered'\n  lastReviewed?: Date\n  nextReview?: Date\n  reviewCount: number\n  successRate: number\n  example?: string\n  pronunciation?: string\n  wordType?: 'isim' | 'fiil' | 'sıfat' | 'zamir'\n  detailedExplanation?: string\n}\n\ninterface FlashcardSet {\n  id: number\n  name: string\n  description: string\n  totalCards: number\n  masteredCards: number\n  category: string\n  color: string\n  emoji: string\n  cards: Flashcard[]\n}\n\n// Arayüz tamamen Almanca\nconst translations = {\n  title: 'Lernkarten - Karteikarten System',\n  subtitle: 'Lernen Sie effektiv mit dem Spaced Repetition System',\n  search: 'Karten suchen...',\n  categories: 'Kategorien',\n  cards: 'Karten',\n  sets: 'Kartensätze',\n  new: 'Neu',\n  learning: 'Lernen',\n  review: 'Wiederholen',\n  mastered: 'Beherrscht',\n  startStudy: 'Lernen starten',\n  continueStudy: 'Weiterlernen',\n  reviewCards: 'Karten wiederholen',\n  difficulty: 'Schwierigkeit',\n  category: 'Kategorie',\n  close: 'Schließen',\n  showAnswer: 'Antwort zeigen',\n  nextCard: 'Nächste Karte',\n  previousCard: 'Vorherige Karte',\n  easy: 'Einfach',\n  good: 'Gut',\n  hard: 'Schwer',\n  again: 'Nochmal',\n  flip: 'Umdrehen',\n  studyComplete: 'Lernsitzung beendet',\n  cardsStudied: 'Karten gelernt',\n  accuracy: 'Genauigkeit',\n  timeSpent: 'Zeit verbracht',\n  minutes: 'Minuten',\n  addToReview: 'Zur Wiederholung hinzufügen',\n  pronunciation: 'Aussprache',\n  example: 'Beispiel',\n  wordType: 'Wortart',\n  detailedExplanation: 'Detaillierte Erklärung',\n  showDetails: 'Details anzeigen'\n}\n\nconst flashcardSets = {\n  A1: [\n    {\n      id: 1,\n      name: 'Grundwortschatz Familie',\n      description: 'Wichtige Wörter zum Thema Familie',\n      totalCards: 1200,\n      masteredCards: 950,\n      category: 'Wortschatz',\n      color: 'bg-pink-100 text-pink-800',\n      emoji: '👨‍👩‍👧‍👦',\n      cards: [\n        {\n          id: 1,\n          front: 'die Familie',\n          back: 'aile / family',\n          category: 'Familie',\n          difficulty: 'easy',\n          status: 'mastered',\n          reviewCount: 5,\n          successRate: 100,\n          pronunciation: '/faˈmiːli̯ə/',\n          example: 'Meine Familie ist sehr groß.',\n          wordType: 'isim',\n          detailedExplanation: 'Bir isim. Kan bağı veya evlilik yoluyla birbirine bağlı kişilerin oluşturduğu toplumsal birimi ifade eder.'\n        },\n        {\n          id: 2,\n          front: 'der Vater',\n          back: 'baba / father',\n          category: 'Familie',\n          difficulty: 'easy',\n          status: 'mastered',\n          reviewCount: 4,\n          successRate: 100,\n          pronunciation: '/ˈfaːtɐ/',\n          example: 'Mein Vater arbeitet im Büro.',\n          wordType: 'isim',\n          detailedExplanation: 'Erkek ebeveyn anlamına gelen bir isim. Ailenin erkek reisi olarak kabul edilir.'\n        },\n        {\n          id: 3,\n          front: 'lieben',\n          back: 'sevmek / to love',\n          category: 'Familie',\n          difficulty: 'easy',\n          status: 'learning',\n          reviewCount: 2,\n          successRate: 75,\n          pronunciation: '/ˈliːbən/',\n          example: 'Ich liebe meine Familie.',\n          wordType: 'fiil',\n          detailedExplanation: 'Güçlü sevgi ve bağlılık hissetmek anlamına gelen bir fiil.'\n        },\n        {\n          id: 4,\n          front: 'groß',\n          back: 'büyük / big/tall',\n          category: 'Familie',\n          difficulty: 'easy',\n          status: 'review',\n          reviewCount: 3,\n          successRate: 80,\n          pronunciation: '/ɡroːs/',\n          example: 'Mein Vater ist sehr groß.',\n          wordType: 'sıfat',\n          detailedExplanation: 'Boyut, yaş veya önem bakımından büyük olan şeyleri tanımlayan bir sıfat.'\n        },\n        {\n          id: 5,\n          front: 'ich',\n          back: 'ben / I',\n          category: 'Familie',\n          difficulty: 'easy',\n          status: 'new',\n          reviewCount: 0,\n          successRate: 0,\n          pronunciation: '/ɪç/',\n          example: 'Ich bin glücklich.',\n          wordType: 'zamir',\n          detailedExplanation: 'Birinci tekil şahıs zamiri. Konuşan kişinin kendisini ifade eder.'\n        }\n      ]\n    }\n  ] as FlashcardSet[],\n  A2: [\n    {\n      id: 4,\n      name: 'Berufe',\n      description: 'Verschiedene Berufe und Tätigkeiten',\n      totalCards: 1250,\n      masteredCards: 1000,\n      category: 'Wortschatz',\n      color: 'bg-blue-100 text-blue-800',\n      emoji: '💼',\n      cards: [\n        {\n          id: 11,\n          front: 'der Arzt',\n          back: 'doktor / doctor',\n          category: 'Berufe',\n          difficulty: 'medium',\n          status: 'mastered',\n          reviewCount: 3,\n          successRate: 90,\n          pronunciation: '/aʁtst/',\n          example: 'Der Arzt hilft kranken Menschen.',\n          wordType: 'isim',\n          detailedExplanation: 'Tıp eğitimi almış, hastalıkları teşhis eden ve tedavi eden kişi.'\n        },\n        {\n          id: 12,\n          front: 'arbeiten',\n          back: 'çalışmak / to work',\n          category: 'Berufe',\n          difficulty: 'medium',\n          status: 'learning',\n          reviewCount: 2,\n          successRate: 75,\n          pronunciation: '/ˈaʁbaɪ̯tən/',\n          example: 'Ich arbeite in einem Büro.',\n          wordType: 'fiil',\n          detailedExplanation: 'Bir iş yaparak para kazanmak, meslek icra etmek anlamına gelen bir fiil.'\n        }\n      ]\n    }\n  ] as FlashcardSet[],\n  B1: [\n    {\n      id: 6,\n      name: 'Gefühle und Emotionen',\n      description: 'Komplexere Gefühle ausdrücken',\n      totalCards: 3500,\n      masteredCards: 2800,\n      category: 'Wortschatz',\n      color: 'bg-yellow-100 text-yellow-800',\n      emoji: '😊',\n      cards: [\n        {\n          id: 14,\n          front: 'glücklich',\n          back: 'mutlu / happy',\n          category: 'Gefühle',\n          difficulty: 'medium',\n          status: 'learning',\n          reviewCount: 2,\n          successRate: 70,\n          pronunciation: '/ˈɡlʏklɪç/',\n          example: 'Ich bin sehr glücklich heute.',\n          wordType: 'sıfat',\n          detailedExplanation: 'İç huzur ve memnuniyet hissi veren pozitif duygusal durumu ifade eden bir sıfat. Kişinin yaşamından tatmin olduğunu gösterir.'\n        },\n        {\n          id: 15,\n          front: 'fühlen',\n          back: 'hissetmek / to feel',\n          category: 'Gefühle',\n          difficulty: 'medium',\n          status: 'mastered',\n          reviewCount: 4,\n          successRate: 85,\n          pronunciation: '/ˈfyːlən/',\n          example: 'Ich fühle mich heute gut.',\n          wordType: 'fiil',\n          detailedExplanation: 'Duygusal veya fiziksel bir durumu deneyimlemek, hissetmek anlamına gelen bir fiil.'\n        },\n        {\n          id: 16,\n          front: 'er',\n          back: 'o (erkek) / he',\n          category: 'Gefühle',\n          difficulty: 'easy',\n          status: 'mastered',\n          reviewCount: 6,\n          successRate: 100,\n          pronunciation: '/eːɐ̯/',\n          example: 'Er ist mein Freund.',\n          wordType: 'zamir',\n          detailedExplanation: 'Üçüncü tekil şahıs erkek zamiri. Erkek bir kişiyi ifade ederken kullanılır.'\n        }\n      ]\n    }\n  ] as FlashcardSet[],\n  B2: [\n    {\n      id: 7,\n      name: 'Wissenschaft und Technik',\n      description: 'Fachbegriffe aus Wissenschaft und Technik',\n      totalCards: 3000,\n      masteredCards: 2200,\n      category: 'Wortschatz',\n      color: 'bg-indigo-100 text-indigo-800',\n      emoji: '🔬',\n      cards: [\n        {\n          id: 15,\n          front: 'die Forschung',\n          back: 'araştırma / research',\n          category: 'Wissenschaft',\n          difficulty: 'hard',\n          status: 'learning',\n          reviewCount: 1,\n          successRate: 60,\n          pronunciation: '/ˈfɔʁʃʊŋ/',\n          example: 'Die Forschung ist sehr wichtig.',\n          wordType: 'isim',\n          detailedExplanation: 'Bilimsel yöntemlerle yeni bilgiler elde etme, keşif yapma süreci. Sistematik araştırma faaliyeti.'\n        },\n        {\n          id: 16,\n          front: 'entwickeln',\n          back: 'geliştirmek / to develop',\n          category: 'Wissenschaft',\n          difficulty: 'hard',\n          status: 'new',\n          reviewCount: 0,\n          successRate: 0,\n          pronunciation: '/ɛntˈvɪkl̩n/',\n          example: 'Wir entwickeln neue Technologien.',\n          wordType: 'fiil',\n          detailedExplanation: 'Bir şeyi daha iyi, daha gelişmiş hale getirmek, ilerletmek anlamına gelen bir fiil.'\n        },\n        {\n          id: 17,\n          front: 'etwas',\n          back: 'bir şey / something',\n          category: 'Wissenschaft',\n          difficulty: 'medium',\n          status: 'mastered',\n          reviewCount: 5,\n          successRate: 90,\n          pronunciation: '/ˈɛtvas/',\n          example: 'Ich habe etwas Interessantes gefunden.',\n          wordType: 'zamir',\n          detailedExplanation: 'Belirsiz bir nesne veya durumu ifade eden zamir. Tam olarak tanımlanmamış bir şeyi belirtir.'\n        }\n      ]\n    }\n  ] as FlashcardSet[],\n  C1: [\n    {\n      id: 8,\n      name: 'Philosophie und Abstrakte Begriffe',\n      description: 'Komplexe und abstrakte Begriffe',\n      totalCards: 3000,\n      masteredCards: 2000,\n      category: 'Wortschatz',\n      color: 'bg-gray-100 text-gray-800',\n      emoji: '🤔',\n      cards: [\n        {\n          id: 16,\n          front: 'die Erkenntnis',\n          back: 'bilgi/kavrayış / knowledge/insight',\n          category: 'Philosophie',\n          difficulty: 'very hard',\n          status: 'new',\n          reviewCount: 0,\n          successRate: 0,\n          pronunciation: '/ɛɐ̯ˈkɛntnɪs/',\n          example: 'Diese Erkenntnis ist sehr wertvoll.',\n          wordType: 'isim',\n          detailedExplanation: 'Derin anlayış ve kavrayış sonucu elde edilen bilgi. Felsefi ve bilimsel düşüncenin temel kavramı.'\n        },\n        {\n          id: 17,\n          front: 'reflektieren',\n          back: 'düşünmek/yansıtmak / to reflect',\n          category: 'Philosophie',\n          difficulty: 'very hard',\n          status: 'learning',\n          reviewCount: 1,\n          successRate: 50,\n          pronunciation: '/ʁeflɛkˈtiːʁən/',\n          example: 'Ich reflektiere über meine Erfahrungen.',\n          wordType: 'fiil',\n          detailedExplanation: 'Derin düşünmek, bir konu üzerinde dikkatli bir şekilde düşünce yürütmek anlamına gelen bir fiil.'\n        },\n        {\n          id: 18,\n          front: 'jemand',\n          back: 'birisi / someone',\n          category: 'Philosophie',\n          difficulty: 'medium',\n          status: 'mastered',\n          reviewCount: 4,\n          successRate: 95,\n          pronunciation: '/ˈjeːmant/',\n          example: 'Jemand hat angerufen.',\n          wordType: 'zamir',\n          detailedExplanation: 'Belirsiz bir kişiyi ifade eden zamir. Kimliği bilinmeyen veya önemli olmayan bir kişiyi belirtir.'\n        }\n      ]\n    }\n  ] as FlashcardSet[]\n}\n\nexport default function Flashcards({ selectedLevel, language }: FlashcardsProps) {\n  const t = translations\n  const sets = flashcardSets[selectedLevel as keyof typeof flashcardSets] || []\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedSet, setSelectedSet] = useState<number | null>(null)\n  const [currentCardIndex, setCurrentCardIndex] = useState(0)\n  const [showAnswer, setShowAnswer] = useState(false)\n  const [studyMode, setStudyMode] = useState(false)\n  const [showDetails, setShowDetails] = useState(false)\n  const [studyStats, setStudyStats] = useState({\n    cardsStudied: 0,\n    correctAnswers: 0,\n    startTime: new Date()\n  })\n\n  // Ses çalma fonksiyonu\n  const playAudio = (word: string) => {\n    try {\n      const utterance = new SpeechSynthesisUtterance(word)\n      utterance.lang = 'de-DE'\n      utterance.rate = 0.8\n      utterance.pitch = 1\n      \n      const voices = speechSynthesis.getVoices()\n      const germanVoice = voices.find(voice => voice.lang.includes('de'))\n      if (germanVoice) {\n        utterance.voice = germanVoice\n      }\n      \n      speechSynthesis.speak(utterance)\n    } catch (error) {\n      console.error('Ses çalınamadı:', error)\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'mastered': return 'bg-green-100 text-green-800'\n      case 'review': return 'bg-blue-100 text-blue-800'\n      case 'learning': return 'bg-yellow-100 text-yellow-800'\n      case 'new': return 'bg-gray-100 text-gray-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'mastered': return t.mastered\n      case 'review': return t.review\n      case 'learning': return t.learning\n      case 'new': return t.new\n      default: return t.new\n    }\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'bg-green-100 text-green-800'\n      case 'medium': return 'bg-yellow-100 text-yellow-800'\n      case 'hard': return 'bg-orange-100 text-orange-800'\n      case 'very hard': return 'bg-red-100 text-red-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getWordTypeColor = (wordType: string) => {\n    switch (wordType) {\n      case 'isim': return 'bg-blue-100 text-blue-800'\n      case 'fiil': return 'bg-green-100 text-green-800'\n      case 'sıfat': return 'bg-purple-100 text-purple-800'\n      case 'zamir': return 'bg-orange-100 text-orange-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const handleCardResponse = (difficulty: 'again' | 'hard' | 'good' | 'easy') => {\n    const currentSet = sets.find(s => s.id === selectedSet)\n    if (!currentSet) return\n\n    setStudyStats(prev => ({\n      ...prev,\n      cardsStudied: prev.cardsStudied + 1,\n      correctAnswers: prev.correctAnswers + (difficulty === 'easy' || difficulty === 'good' ? 1 : 0)\n    }))\n\n    // Nächste Karte oder Ende der Sitzung\n    if (currentCardIndex < currentSet.cards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1)\n      setShowAnswer(false)\n      setShowDetails(false)\n    } else {\n      setStudyMode(false)\n      // Hier könnte man die Statistiken speichern\n    }\n  }\n\n  const startStudySession = (setId: number) => {\n    setSelectedSet(setId)\n    setCurrentCardIndex(0)\n    setShowAnswer(false)\n    setShowDetails(false)\n    setStudyMode(true)\n    setStudyStats({\n      cardsStudied: 0,\n      correctAnswers: 0,\n      startTime: new Date()\n    })\n  }\n\n  const filteredSets = sets.filter(set =>\n    set.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    set.category.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  const currentSet = sets.find(s => s.id === selectedSet)\n  const currentCard = currentSet?.cards[currentCardIndex]\n\n  const totalCards = sets.reduce((sum, set) => sum + set.totalCards, 0)\n  const totalMastered = sets.reduce((sum, set) => sum + set.masteredCards, 0)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">{t.title}</h2>\n        <p className=\"opacity-90\">{t.subtitle}</p>\n        <div className=\"mt-4 flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{selectedLevel}</span> Niveau\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{totalCards}</span> {t.cards}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{totalMastered}</span> {t.mastered}\n          </div>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\">{Math.round((totalMastered/totalCards) * 100)}%</span> abgeschlossen\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder={t.search}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\">\n              🔍\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {!studyMode ? (\n        <>\n          {/* Flashcard Sets */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredSets.map((set) => (\n              <Card key={set.id} className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"text-2xl\">{set.emoji}</span>\n                      <div>\n                        <CardTitle className=\"text-lg\">{set.name}</CardTitle>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {set.masteredCards}/{set.totalCards} {t.cards}\n                        </p>\n                      </div>\n                    </div>\n                    <Badge className={set.color}>\n                      {Math.round((set.masteredCards/set.totalCards) * 100)}%\n                    </Badge>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-2\">{set.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <Progress value={(set.masteredCards/set.totalCards) * 100} />\n                    \n                    <div className=\"flex justify-between items-center text-sm text-muted-foreground\">\n                      <span>📚 {set.category}</span>\n                      <span>{set.totalCards - set.masteredCards} zu lernen</span>\n                    </div>\n\n                    <Button \n                      className=\"w-full\"\n                      onClick={() => startStudySession(set.id)}\n                    >\n                      {set.masteredCards === set.totalCards ? t.reviewCards : t.startStudy}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Statistics */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Lernkarten-Statistiken</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">{totalMastered}</div>\n                  <div className=\"text-sm text-green-600\">{t.mastered}</div>\n                </div>\n                <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-yellow-600\">\n                    {sets.reduce((sum, set) => sum + set.cards.filter(c => c.status === 'learning').length, 0)}\n                  </div>\n                  <div className=\"text-sm text-yellow-600\">{t.learning}</div>\n                </div>\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {sets.reduce((sum, set) => sum + set.cards.filter(c => c.status === 'review').length, 0)}\n                  </div>\n                  <div className=\"text-sm text-blue-600\">{t.review}</div>\n                </div>\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-gray-600\">\n                    {sets.reduce((sum, set) => sum + set.cards.filter(c => c.status === 'new').length, 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">{t.new}</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </>\n      ) : (\n        /* Study Mode */\n        <div className=\"max-w-2xl mx-auto\">\n          {/* Progress */}\n          <Card className=\"mb-6\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium\">\n                  Karte {currentCardIndex + 1} von {currentSet?.cards.length}\n                </span>\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setStudyMode(false)}\n                >\n                  {t.close}\n                </Button>\n              </div>\n              <Progress \n                value={((currentCardIndex + 1) / (currentSet?.cards.length || 1)) * 100} \n              />\n            </CardContent>\n          </Card>\n\n          {/* Flashcard */}\n          {currentCard && (\n            <Card className=\"min-h-[400px] cursor-pointer\" onClick={() => setShowAnswer(!showAnswer)}>\n              <CardContent className=\"flex flex-col items-center justify-center h-full p-8\">\n                <div className=\"text-center space-y-4\">\n                  <div className=\"text-sm text-muted-foreground mb-4 flex flex-wrap gap-2 justify-center\">\n                    <Badge className={getStatusColor(currentCard.status)}>\n                      {getStatusText(currentCard.status)}\n                    </Badge>\n                    <Badge className={getDifficultyColor(currentCard.difficulty)} variant=\"outline\">\n                      {currentCard.difficulty}\n                    </Badge>\n                    {currentCard.wordType && (\n                      <Badge className={getWordTypeColor(currentCard.wordType)} variant=\"outline\">\n                        {currentCard.wordType}\n                      </Badge>\n                    )}\n                  </div>\n\n                  {!showAnswer ? (\n                    /* Front of Card */\n                    <div className=\"space-y-4\">\n                      <div className=\"text-3xl font-bold text-center\">\n                        {currentCard.front}\n                      </div>\n                      {currentCard.pronunciation && (\n                        <div className=\"text-lg text-muted-foreground\">\n                          {currentCard.pronunciation}\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            className=\"ml-2\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              playAudio(currentCard.front)\n                            }}\n                          >\n                            🔊\n                          </Button>\n                        </div>\n                      )}\n                      <div className=\"text-sm text-muted-foreground\">\n                        Klicken Sie, um die Antwort zu sehen\n                      </div>\n                    </div>\n                  ) : (\n                    /* Back of Card */\n                    <div className=\"space-y-4\">\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {currentCard.back}\n                      </div>\n                      {currentCard.example && (\n                        <div className=\"text-lg text-muted-foreground italic\">\n                          \"{currentCard.example}\"\n                        </div>\n                      )}\n                      \n                      {/* Detaylı açıklama gösterme */}\n                      {showDetails && currentCard.detailedExplanation && (\n                        <div className=\"mt-3 p-3 bg-green-50 rounded-lg\">\n                          <p className=\"text-sm font-medium text-green-800\">\n                            {t.detailedExplanation}: {currentCard.detailedExplanation}\n                          </p>\n                        </div>\n                      )}\n\n                      <div className=\"flex gap-2 justify-center\">\n                        {currentCard.detailedExplanation && (\n                          <Button \n                            size=\"sm\" \n                            variant=\"outline\"\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              setShowDetails(!showDetails)\n                            }}\n                          >\n                            📖 {t.showDetails}\n                          </Button>\n                        )}\n                      </div>\n\n                      <div className=\"text-sm text-muted-foreground\">\n                        Wie gut kannten Sie diese Karte?\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Response Buttons */}\n          {showAnswer && (\n            <Card className=\"mt-4\">\n              <CardContent className=\"pt-6\">\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                  <Button \n                    variant=\"outline\"\n                    className=\"text-red-600 border-red-200 hover:bg-red-50\"\n                    onClick={() => handleCardResponse('again')}\n                  >\n                    {t.again}\n                  </Button>\n                  <Button \n                    variant=\"outline\"\n                    className=\"text-orange-600 border-orange-200 hover:bg-orange-50\"\n                    onClick={() => handleCardResponse('hard')}\n                  >\n                    {t.hard}\n                  </Button>\n                  <Button \n                    variant=\"outline\"\n                    className=\"text-blue-600 border-blue-200 hover:bg-blue-50\"\n                    onClick={() => handleCardResponse('good')}\n                  >\n                    {t.good}\n                  </Button>\n                  <Button \n                    variant=\"outline\"\n                    className=\"text-green-600 border-green-200 hover:bg-green-50\"\n                    onClick={() => handleCardResponse('easy')}\n                  >\n                    {t.easy}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Study Stats */}\n          <Card className=\"mt-4\">\n            <CardContent className=\"pt-6\">\n              <div className=\"grid grid-cols-3 gap-4 text-center\">\n                <div>\n                  <div className=\"text-2xl font-bold text-blue-600\">{studyStats.cardsStudied}</div>\n                  <div className=\"text-sm text-muted-foreground\">{t.cardsStudied}</div>\n                </div>\n                <div>\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {studyStats.cardsStudied > 0 ? Math.round((studyStats.correctAnswers / studyStats.cardsStudied) * 100) : 0}%\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">{t.accuracy}</div>\n                </div>\n                <div>\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {Math.round((Date.now() - studyStats.startTime.getTime()) / 60000)}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">{t.minutes}</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10777, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport Header from '@/components/Header'\nimport Navigation from '@/components/Navigation'\nimport LevelSelector from '@/components/LevelSelector'\nimport Dashboard from '@/components/pages/Dashboard'\nimport Grammar from '@/components/pages/GrammarNew'\nimport Vocabulary from '@/components/pages/VocabularyNew'\nimport Reading from '@/components/pages/ReadingNew'\nimport Exercises from '@/components/pages/ExercisesNew'\nimport Progress from '@/components/pages/Progress'\nimport Profile from '@/components/pages/Profile'\nimport Flashcards from '@/components/pages/FlashcardsNew'\n\nexport default function Home() {\n  const [activeSection, setActiveSection] = useState('dashboard')\n  const [selectedLevel, setSelectedLevel] = useState('B1')\n  const [language, setLanguage] = useState('tr')\n\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'dashboard':\n        return <Dashboard selectedLevel={selectedLevel} language={language} />\n      case 'grammar':\n        return <Grammar selectedLevel={selectedLevel} language={language} />\n      case 'vocabulary':\n        return <Vocabulary selectedLevel={selectedLevel} language={language} />\n      case 'reading':\n        return <Reading selectedLevel={selectedLevel} language={language} />\n      case 'exercises':\n        return <Exercises selectedLevel={selectedLevel} language={language} />\n      case 'progress':\n        return <Progress selectedLevel={selectedLevel} language={language} />\n      case 'profile':\n        return <Profile language={language} />\n      case 'flashcards':\n        return <Flashcards selectedLevel={selectedLevel} language={language} />\n      default:\n        return <Dashboard selectedLevel={selectedLevel} language={language} />\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header language={language} setLanguage={setLanguage} />\n      <Navigation \n        activeSection={activeSection} \n        setActiveSection={setActiveSection}\n        language={language}\n      />\n      \n      <main className=\"container mx-auto p-4 md:p-6\">\n        <LevelSelector \n          selectedLevel={selectedLevel}\n          setSelectedLevel={setSelectedLevel}\n          language={language}\n        />\n        \n        <div className=\"mt-6\">\n          {renderActiveSection()}\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAbA;;;;;;;;;;;;;AAee,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,sBAAsB;QAC1B,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,2IAAA,CAAA,UAAS;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC5D,KAAK;gBACH,qBAAO,6LAAC,4IAAA,CAAA,UAAO;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC1D,KAAK;gBACH,qBAAO,6LAAC,+IAAA,CAAA,UAAU;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC7D,KAAK;gBACH,qBAAO,6LAAC,4IAAA,CAAA,UAAO;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC1D,KAAK;gBACH,qBAAO,6LAAC,8IAAA,CAAA,UAAS;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC5D,KAAK;gBACH,qBAAO,6LAAC,0IAAA,CAAA,UAAQ;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC3D,KAAK;gBACH,qBAAO,6LAAC,yIAAA,CAAA,UAAO;oBAAC,UAAU;;;;;;YAC5B,KAAK;gBACH,qBAAO,6LAAC,+IAAA,CAAA,UAAU;oBAAC,eAAe;oBAAe,UAAU;;;;;;YAC7D;gBACE,qBAAO,6LAAC,2IAAA,CAAA,UAAS;oBAAC,eAAe;oBAAe,UAAU;;;;;;QAC9D;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;gBAAC,UAAU;gBAAU,aAAa;;;;;;0BACzC,6LAAC,mIAAA,CAAA,UAAU;gBACT,eAAe;gBACf,kBAAkB;gBAClB,UAAU;;;;;;0BAGZ,6LAAC;gBAAK,WAAU;;kCACd,6LAAC,sIAAA,CAAA,UAAa;wBACZ,eAAe;wBACf,kBAAkB;wBAClB,UAAU;;;;;;kCAGZ,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAKX;GAlDwB;KAAA","debugId":null}}]
}